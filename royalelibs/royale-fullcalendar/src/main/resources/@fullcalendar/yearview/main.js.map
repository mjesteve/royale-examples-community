{"version":3,"file":"main.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/DayGridDateProfileGenerator.ts","../src/Popover.ts","../src/SimpleDayGridEventRenderer.ts","../src/DayGridEventRenderer.ts","../src/DayGridMirrorRenderer.ts","../src/DayGridFillRenderer.ts","../src/DayTile.ts","../src/DayBgRow.ts","../src/DayGrid.ts","../src/AbstractDayGridView.ts","../src/SimpleDayGrid.ts","../src/DayTable.ts","../src/DayGridView.ts","../src/main.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\r\n  DateProfileGenerator,\r\n  DateRange\r\n} from '@fullcalendar/core'\r\n\r\nexport default class DayGridDateProfileGenerator extends DateProfileGenerator {\r\n\r\n  // Computes the date range that will be rendered.\r\n  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay): DateRange {\r\n    let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay)\r\n    let start = renderRange.start\r\n    let end = renderRange.end\r\n\r\n    return { start, end }\r\n  }\r\n\r\n}\r\n","\r\n/* A rectangular panel that is absolutely positioned over other content\r\n------------------------------------------------------------------------------------------------------------------------\r\nOptions:\r\n  - className (string)\r\n  - content (HTML string, element, or element array)\r\n  - parentEl\r\n  - top\r\n  - left\r\n  - right (the x coord of where the right edge should be. not a \"CSS\" right)\r\n  - autoHide (boolean)\r\n  - show (callback)\r\n  - hide (callback)\r\n*/\r\n\r\nimport {\r\n  removeElement, createElement, applyStyle,\r\n  listenBySelector,\r\n  computeClippingRect, computeRect\r\n} from '@fullcalendar/core'\r\n\r\nexport interface PopoverOptions {\r\n  className?: string\r\n  content?: (el: HTMLElement) => void\r\n  parentEl: HTMLElement\r\n  autoHide?: boolean\r\n  top?: number\r\n  left?: number\r\n  right?: number\r\n  viewportConstrain?: boolean\r\n}\r\n\r\nexport default class Popover {\r\n\r\n  isHidden: boolean = true\r\n  options: PopoverOptions\r\n  el: HTMLElement // the container element for the popover. generated by this object\r\n  margin: number = 10 // the space required between the popover and the edges of the scroll container\r\n\r\n\r\n  constructor(options: PopoverOptions) {\r\n    this.options = options\r\n  }\r\n\r\n\r\n  // Shows the popover on the specified position. Renders it if not already\r\n  show() {\r\n    if (this.isHidden) {\r\n      if (!this.el) {\r\n        this.render()\r\n      }\r\n      this.el.style.display = ''\r\n      this.position()\r\n      this.isHidden = false\r\n      this.trigger('show')\r\n    }\r\n  }\r\n\r\n\r\n  // Hides the popover, through CSS, but does not remove it from the DOM\r\n  hide() {\r\n    if (!this.isHidden) {\r\n      this.el.style.display = 'none'\r\n      this.isHidden = true\r\n      this.trigger('hide')\r\n    }\r\n  }\r\n\r\n\r\n  // Creates `this.el` and renders content inside of it\r\n  render() {\r\n    let options = this.options\r\n    let el = this.el = createElement('div', {\r\n      className: 'fc-popover ' + (options.className || ''),\r\n      style: {\r\n        top: '0',\r\n        left: '0'\r\n      }\r\n    })\r\n\r\n    if (typeof options.content === 'function') {\r\n      options.content(el)\r\n    }\r\n\r\n    options.parentEl.appendChild(el)\r\n\r\n    // when a click happens on anything inside with a 'fc-close' className, hide the popover\r\n    listenBySelector(el, 'click', '.fc-close', (ev) => {\r\n      this.hide()\r\n    })\r\n\r\n    if (options.autoHide) {\r\n      document.addEventListener('mousedown', this.documentMousedown)\r\n    }\r\n  }\r\n\r\n\r\n  // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\r\n  documentMousedown = (ev) => {\r\n    // only hide the popover if the click happened outside the popover\r\n    if (this.el && !this.el.contains(ev.target)) {\r\n      this.hide()\r\n    }\r\n  }\r\n\r\n\r\n  // Hides and unregisters any handlers\r\n  destroy() {\r\n    this.hide()\r\n\r\n    if (this.el) {\r\n      removeElement(this.el)\r\n      this.el = null\r\n    }\r\n\r\n    document.removeEventListener('mousedown', this.documentMousedown)\r\n  }\r\n\r\n\r\n  // Positions the popover optimally, using the top/left/right options\r\n  position() {\r\n    let options = this.options\r\n    let el = this.el\r\n    let elDims = el.getBoundingClientRect() // only used for width,height\r\n    let origin = computeRect(el.offsetParent)\r\n    let clippingRect = computeClippingRect(options.parentEl)\r\n    let top // the \"position\" (not \"offset\") values for the popover\r\n    let left //\r\n\r\n    // compute top and left\r\n    top = options.top || 0\r\n    if (options.left !== undefined) {\r\n      left = options.left\r\n    } else if (options.right !== undefined) {\r\n      left = options.right - elDims.width // derive the left value from the right value\r\n    } else {\r\n      left = 0\r\n    }\r\n\r\n    // constrain to the view port. if constrained by two edges, give precedence to top/left\r\n    top = Math.min(top, clippingRect.bottom - elDims.height - this.margin)\r\n    top = Math.max(top, clippingRect.top + this.margin)\r\n    left = Math.min(left, clippingRect.right - elDims.width - this.margin)\r\n    left = Math.max(left, clippingRect.left + this.margin)\r\n\r\n    applyStyle(el, {\r\n      top: top - origin.top,\r\n      left: left - origin.left\r\n    })\r\n  }\r\n\r\n\r\n  // Triggers a callback. Calls a function in the option hash of the same name.\r\n  // Arguments beyond the first `name` are forwarded on.\r\n  // TODO: better code reuse for this. Repeat code\r\n  // can kill this???\r\n  trigger(name) {\r\n    if (this.options[name]) {\r\n      this.options[name].apply(this, Array.prototype.slice.call(arguments, 1))\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  htmlEscape, cssToStr,\r\n  FgEventRenderer,\r\n  Seg\r\n} from '@fullcalendar/core'\r\n\r\n\r\n/* Event-rendering methods for the DayGrid class\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\n// \"Simple\" is bad a name. has nothing to do with SimpleDayGrid\r\nexport default abstract class SimpleDayGridEventRenderer extends FgEventRenderer {\r\n\r\n\r\n  // Builds the HTML to be used for the default element for an individual segment\r\n  renderSegHtml(seg: Seg, mirrorInfo) {\r\n    let { view, options } = this.context\r\n    let eventRange = seg.eventRange\r\n    let eventDef = eventRange.def\r\n    let eventUi = eventRange.ui\r\n    let allDay = eventDef.allDay\r\n    let isDraggable = view.computeEventDraggable(eventDef, eventUi)\r\n    let isResizableFromStart = allDay && seg.isStart && view.computeEventStartResizable(eventDef, eventUi)\r\n    let isResizableFromEnd = allDay && seg.isEnd && view.computeEventEndResizable(eventDef, eventUi)\r\n    let classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd, mirrorInfo)\r\n    let skinCss = cssToStr(this.getSkinCss(eventUi))\r\n    let timeHtml = ''\r\n    let timeText\r\n    let titleHtml\r\n\r\n    classes.unshift('fc-day-grid-event', 'fc-h-event')\r\n\r\n    // Only display a timed events time if it is the starting segment\r\n    if (seg.isStart) {\r\n      timeText = this.getTimeText(eventRange)\r\n      if (timeText) {\r\n        timeHtml = '<span class=\"fc-time\">' + htmlEscape(timeText) + '</span>'\r\n      }\r\n    }\r\n\r\n    titleHtml =\r\n      '<span class=\"fc-title\">' +\r\n        (htmlEscape(eventDef.title || '') || '&nbsp;') + // we always want one line of height\r\n      '</span>'\r\n\r\n    return '<a class=\"' + classes.join(' ') + '\"' +\r\n        (eventDef.url ?\r\n          ' href=\"' + htmlEscape(eventDef.url) + '\"' :\r\n          ''\r\n          ) +\r\n        (skinCss ?\r\n          ' style=\"' + skinCss + '\"' :\r\n          ''\r\n          ) +\r\n      '>' +\r\n        '<div class=\"fc-content\">' +\r\n          (options.dir === 'rtl' ?\r\n            titleHtml + ' ' + timeHtml : // put a natural space in between\r\n            timeHtml + ' ' + titleHtml   //\r\n            ) +\r\n        '</div>' +\r\n        (isResizableFromStart ?\r\n          '<div class=\"fc-resizer fc-start-resizer\"></div>' :\r\n          ''\r\n          ) +\r\n        (isResizableFromEnd ?\r\n          '<div class=\"fc-resizer fc-end-resizer\"></div>' :\r\n          ''\r\n          ) +\r\n      '</a>'\r\n  }\r\n\r\n\r\n  // Computes a default event time formatting string if `eventTimeFormat` is not explicitly defined\r\n  computeEventTimeFormat() {\r\n    return {\r\n      hour: 'numeric',\r\n      minute: '2-digit',\r\n      omitZeroMinute: true,\r\n      meridiem: 'narrow'\r\n    }\r\n  }\r\n\r\n\r\n  computeDisplayEventEnd() {\r\n    return false // TODO: somehow consider the originating DayGrid's column count\r\n  }\r\n\r\n}\r\n","import {\r\n  createElement,\r\n  removeElement,\r\n  appendToElement,\r\n  prependToElement,\r\n  Seg\r\n} from '@fullcalendar/core'\r\nimport DayGrid from './DayGrid'\r\nimport SimpleDayGridEventRenderer from './SimpleDayGridEventRenderer'\r\n\r\n\r\n/* Event-rendering methods for the DayGrid class\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nexport default class DayGridEventRenderer extends SimpleDayGridEventRenderer {\r\n\r\n  dayGrid: DayGrid\r\n  rowStructs: any // an array of objects, each holding information about a row's foreground event-rendering\r\n\r\n\r\n  constructor(dayGrid: DayGrid) {\r\n    super(dayGrid.context)\r\n\r\n    this.dayGrid = dayGrid\r\n  }\r\n\r\n\r\n  // Renders the given foreground event segments onto the grid\r\n  attachSegs(segs: Seg[], mirrorInfo) {\r\n    let rowStructs = this.rowStructs = this.renderSegRows(segs)\r\n\r\n    // append to each row's content skeleton\r\n    this.dayGrid.rowEls.forEach(function(rowNode, i) {\r\n      rowNode.querySelector('.fc-content-skeleton > table').appendChild(\r\n        rowStructs[i].tbodyEl\r\n      )\r\n    })\r\n\r\n    // removes the \"more..\" events popover\r\n    if (!mirrorInfo) {\r\n      this.dayGrid.removeSegPopover()\r\n    }\r\n  }\r\n\r\n\r\n  // Unrenders all currently rendered foreground event segments\r\n  detachSegs() {\r\n    let rowStructs = this.rowStructs || []\r\n    let rowStruct\r\n\r\n    while ((rowStruct = rowStructs.pop())) {\r\n      removeElement(rowStruct.tbodyEl)\r\n    }\r\n\r\n    this.rowStructs = null\r\n  }\r\n\r\n\r\n  // Uses the given events array to generate <tbody> elements that should be appended to each row's content skeleton.\r\n  // Returns an array of rowStruct objects (see the bottom of `renderSegRow`).\r\n  // PRECONDITION: each segment shoud already have a rendered and assigned `.el`\r\n  renderSegRows(segs: Seg[]) {\r\n    let rowStructs = []\r\n    let segRows\r\n    let row\r\n\r\n    segRows = this.groupSegRows(segs) // group into nested arrays\r\n\r\n    // iterate each row of segment groupings\r\n    for (row = 0; row < segRows.length; row++) {\r\n      rowStructs.push(\r\n        this.renderSegRow(row, segRows[row])\r\n      )\r\n    }\r\n\r\n    return rowStructs\r\n  }\r\n\r\n\r\n  // Given a row # and an array of segments all in the same row, render a <tbody> element, a skeleton that contains\r\n  // the segments. Returns object with a bunch of internal data about how the render was calculated.\r\n  // NOTE: modifies rowSegs\r\n  renderSegRow(row, rowSegs) {\r\n    let { dayGrid } = this\r\n    let { colCnt, isRtl } = dayGrid\r\n    let segLevels = this.buildSegLevels(rowSegs) // group into sub-arrays of levels\r\n    let levelCnt = Math.max(1, segLevels.length) // ensure at least one level\r\n    let tbody = document.createElement('tbody')\r\n    let segMatrix = [] // lookup for which segments are rendered into which level+col cells\r\n    let cellMatrix = [] // lookup for all <td> elements of the level+col matrix\r\n    let loneCellMatrix = [] // lookup for <td> elements that only take up a single column\r\n    let i\r\n    let levelSegs\r\n    let col\r\n    let tr: HTMLTableRowElement\r\n    let j\r\n    let seg\r\n    let td: HTMLTableCellElement\r\n\r\n    // populates empty cells from the current column (`col`) to `endCol`\r\n    function emptyCellsUntil(endCol) {\r\n      while (col < endCol) {\r\n        // try to grab a cell from the level above and extend its rowspan. otherwise, create a fresh cell\r\n        td = (loneCellMatrix[i - 1] || [])[col]\r\n        if (td) {\r\n          td.rowSpan = (td.rowSpan || 1) + 1\r\n        } else {\r\n          td = document.createElement('td')\r\n          tr.appendChild(td)\r\n        }\r\n        cellMatrix[i][col] = td\r\n        loneCellMatrix[i][col] = td\r\n        col++\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < levelCnt; i++) { // iterate through all levels\r\n      levelSegs = segLevels[i]\r\n      col = 0\r\n      tr = document.createElement('tr')\r\n\r\n      segMatrix.push([])\r\n      cellMatrix.push([])\r\n      loneCellMatrix.push([])\r\n\r\n      // levelCnt might be 1 even though there are no actual levels. protect against this.\r\n      // this single empty row is useful for styling.\r\n      if (levelSegs) {\r\n        for (j = 0; j < levelSegs.length; j++) { // iterate through segments in level\r\n          seg = levelSegs[j]\r\n          let leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol\r\n          let rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol\r\n\r\n          emptyCellsUntil(leftCol)\r\n\r\n          // create a container that occupies or more columns. append the event element.\r\n          td = createElement('td', { className: 'fc-event-container' }, seg.el) as HTMLTableCellElement\r\n          if (leftCol !== rightCol) {\r\n            td.colSpan = rightCol - leftCol // + 1 Hiedra\r\n          } else { // a single-column segment\r\n            loneCellMatrix[i][col] = td\r\n          }\r\n\r\n          while (col <= rightCol) {\r\n            cellMatrix[i][col] = td\r\n            segMatrix[i][col] = seg\r\n            col++\r\n          }\r\n\r\n          tr.appendChild(td)\r\n        }\r\n      }\r\n\r\n      emptyCellsUntil(colCnt) // finish off the row\r\n\r\n      let introHtml = dayGrid.renderProps.renderIntroHtml()\r\n      if (introHtml) {\r\n        if (dayGrid.isRtl) {\r\n          appendToElement(tr, introHtml)\r\n        } else {\r\n          prependToElement(tr, introHtml)\r\n        }\r\n      }\r\n\r\n      tbody.appendChild(tr)\r\n    }\r\n\r\n    return { // a \"rowStruct\"\r\n      row: row, // the row number\r\n      tbodyEl: tbody,\r\n      cellMatrix: cellMatrix,\r\n      segMatrix: segMatrix,\r\n      segLevels: segLevels,\r\n      segs: rowSegs\r\n    }\r\n  }\r\n\r\n\r\n  // Stacks a flat array of segments, which are all assumed to be in the same row, into subarrays of vertical levels.\r\n  // NOTE: modifies segs\r\n  buildSegLevels(segs: Seg[]) {\r\n    let { isRtl, colCnt } = this.dayGrid\r\n    let levels = []\r\n    let i\r\n    let seg\r\n    let j\r\n\r\n    // Give preference to elements with certain criteria, so they have\r\n    // a chance to be closer to the top.\r\n    segs = this.sortEventSegs(segs)\r\n\r\n    for (i = 0; i < segs.length; i++) {\r\n      seg = segs[i]\r\n\r\n      // loop through levels, starting with the topmost, until the segment doesn't collide with other segments\r\n      for (j = 0; j < levels.length; j++) {\r\n        if (!isDaySegCollision(seg, levels[j])) {\r\n          break\r\n        }\r\n      }\r\n\r\n      // `j` now holds the desired subrow index\r\n      seg.level = j\r\n      seg.leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol // for sorting only\r\n      seg.rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol // for sorting only\r\n\r\n      // create new level array if needed and append segment\r\n      ;(levels[j] || (levels[j] = [])).push(seg)\r\n    }\r\n\r\n    // order segments left-to-right. very important if calendar is RTL\r\n    for (j = 0; j < levels.length; j++) {\r\n      levels[j].sort(compareDaySegCols)\r\n    }\r\n\r\n    return levels\r\n  }\r\n\r\n\r\n  // Given a flat array of segments, return an array of sub-arrays, grouped by each segment's row\r\n  groupSegRows(segs: Seg[]) {\r\n    let segRows = []\r\n    let i\r\n\r\n    for (i = 0; i < this.dayGrid.rowCnt; i++) {\r\n      segRows.push([])\r\n    }\r\n\r\n    for (i = 0; i < segs.length; i++) {\r\n      segRows[segs[i].row].push(segs[i])\r\n    }\r\n\r\n    return segRows\r\n  }\r\n\r\n\r\n  // Computes a default `displayEventEnd` value if one is not expliclty defined\r\n  computeDisplayEventEnd() {\r\n    return this.dayGrid.colCnt === 1 // we'll likely have space if there's only one day\r\n  }\r\n\r\n}\r\n\r\n\r\n// Computes whether two segments' columns collide. They are assumed to be in the same row.\r\nfunction isDaySegCollision(seg: Seg, otherSegs: Seg) {\r\n  let i\r\n  let otherSeg\r\n\r\n  for (i = 0; i < otherSegs.length; i++) {\r\n    otherSeg = otherSegs[i]\r\n\r\n    if (\r\n      otherSeg.firstCol <= seg.lastCol &&\r\n      otherSeg.lastCol >= seg.firstCol\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n\r\n// A cmp function for determining the leftmost event\r\nfunction compareDaySegCols(a: Seg, b: Seg) {\r\n  return a.leftCol - b.leftCol\r\n}\r\n","import {\r\n  htmlToElement, Seg\r\n} from '@fullcalendar/core'\r\nimport DayGridEventRenderer from './DayGridEventRenderer'\r\n\r\n\r\nexport default class DayGridMirrorRenderer extends DayGridEventRenderer {\r\n\r\n  attachSegs(segs: Seg[], mirrorInfo) {\r\n    let { sourceSeg } = mirrorInfo\r\n    let rowStructs = this.rowStructs = this.renderSegRows(segs)\r\n\r\n    // inject each new event skeleton into each associated row\r\n    this.dayGrid.rowEls.forEach(function(rowNode, row) {\r\n      let skeletonEl = htmlToElement('<div class=\"fc-mirror-skeleton\"><table></table></div>') // will be absolutely positioned\r\n      let skeletonTopEl: HTMLElement\r\n      let skeletonTop\r\n\r\n      // If there is an original segment, match the top position. Otherwise, put it at the row's top level\r\n      if (sourceSeg && sourceSeg.row === row) {\r\n        skeletonTopEl = sourceSeg.el\r\n      } else {\r\n        skeletonTopEl = rowNode.querySelector('.fc-content-skeleton tbody')\r\n\r\n        if (!skeletonTopEl) { // when no events\r\n          skeletonTopEl = rowNode.querySelector('.fc-content-skeleton table')\r\n        }\r\n      }\r\n\r\n      skeletonTop = skeletonTopEl.getBoundingClientRect().top -\r\n        rowNode.getBoundingClientRect().top // the offsetParent origin\r\n\r\n      skeletonEl.style.top = skeletonTop + 'px'\r\n      skeletonEl.querySelector('table').appendChild(rowStructs[row].tbodyEl)\r\n\r\n      rowNode.appendChild(skeletonEl)\r\n    })\r\n  }\r\n\r\n}\r\n","import {\r\n  htmlToElement,\r\n  appendToElement,\r\n  prependToElement,\r\n  FillRenderer,\r\n  Seg\r\n} from '@fullcalendar/core'\r\nimport DayGrid, { DayGridSeg } from './DayGrid'\r\nimport moment from 'moment'\r\n\r\n\r\nconst EMPTY_CELL_HTML = '<td style=\"pointer-events:none\"></td>'\r\n\r\n\r\nexport default class DayGridFillRenderer extends FillRenderer {\r\n\r\n  fillSegTag: string = 'td' //  override the default tag name\r\n  dayGrid: DayGrid\r\n\r\n  constructor(dayGrid: DayGrid) {\r\n    super(dayGrid.context)\r\n\r\n    this.dayGrid = dayGrid\r\n  }\r\n\r\n  renderSegs(type: string, segs: DayGridSeg[]) {\r\n\r\n    //  don't render timed background events\r\n    if (type === 'bgEvent') {\r\n      segs = segs.filter(function(seg) {\r\n        return seg.eventRange.def.allDay\r\n      })\r\n    }\r\n\r\n    super.renderSegs(type, segs)\r\n  }\r\n\r\n  attachSegs(type, segs: Seg[]) {\r\n    let els = []\r\n    let i\r\n    let seg\r\n    let skeletonEl: HTMLElement\r\n\r\n    for (i = 0; i < segs.length; i++) {\r\n      seg = segs[i]\r\n      skeletonEl = this.renderFillRow(type, seg)\r\n      this.dayGrid.rowEls[seg.row].appendChild(skeletonEl)\r\n      els.push(skeletonEl)\r\n    }\r\n\r\n    return els\r\n  }\r\n\r\n  //  Generates the HTML needed for one row of a fill. Requires the seg's el to be rendered.\r\n  renderFillRow(type, seg: Seg): HTMLElement {\r\n    let { dayGrid } = this\r\n    let { colCnt, isRtl } = dayGrid\r\n    let leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol\r\n    let rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol\r\n    // Hiedra: skip invalid dates\r\n    if (!isRtl) { // TODO: isRtl\r\n      let aa = dayGrid.calendar.state.currentDate.getFullYear()\r\n      rightCol = Math.min( rightCol, moment(new Date(aa,seg.row,1)).daysInMonth() - 1)\r\n    }\r\n\r\n    let startCol = leftCol\r\n    let endCol = rightCol //  + 1 Hiedra\r\n    let className\r\n    let skeletonEl: HTMLElement\r\n    let trEl: HTMLTableRowElement\r\n\r\n    if (type === 'businessHours') {\r\n      className = 'bgevent'\r\n    } else {\r\n      className = type.toLowerCase()\r\n    }\r\n\r\n    skeletonEl = htmlToElement(\r\n      '<div class=\"fc-' + className + '-skeleton\">' +\r\n        '<table><tr></tr></table>' +\r\n      '</div>'\r\n    )\r\n    trEl = skeletonEl.getElementsByTagName('tr')[0]\r\n\r\n    if (startCol > 0) {\r\n      appendToElement(trEl,\r\n        //  will create (startCol + 1) td's\r\n        new Array(startCol + 1).join(EMPTY_CELL_HTML)\r\n      )\r\n    }\r\n\r\n    (seg.el as HTMLTableCellElement).colSpan = endCol - startCol + 1 // hiedra (add +1)\r\n    trEl.appendChild(seg.el)\r\n\r\n    // if (endCol < colCnt) { // hiedra\r\n    if (endCol < colCnt - 1) {\r\n      appendToElement(trEl,\r\n        //  will create (colCnt - endCol) td's\r\n        // new Array(colCnt - endCol + 1).join(EMPTY_CELL_HTML)\r\n        new Array(colCnt - endCol).join(EMPTY_CELL_HTML) // hiedra\r\n      )\r\n    }\r\n\r\n    let introHtml = dayGrid.renderProps.renderIntroHtml()\r\n    if (introHtml) {\r\n      if (dayGrid.isRtl) {\r\n        appendToElement(trEl, introHtml)\r\n      } else {\r\n        prependToElement(trEl, introHtml)\r\n      }\r\n    }\r\n\r\n    return skeletonEl\r\n  }\r\n\r\n}\r\n","import {\r\n  DateComponent, Seg,\r\n  htmlEscape,\r\n  createFormatter,\r\n  Hit,\r\n  addDays, DateMarker,\r\n  removeElement,\r\n  ComponentContext,\r\n  EventInstanceHash,\r\n  memoizeRendering, MemoizedRendering\r\n} from '@fullcalendar/core'\r\nimport SimpleDayGridEventRenderer from './SimpleDayGridEventRenderer'\r\n\r\nexport interface DayTileProps {\r\n  date: DateMarker\r\n  fgSegs: Seg[]\r\n  eventSelection: string\r\n  eventDragInstances: EventInstanceHash\r\n  eventResizeInstances: EventInstanceHash\r\n}\r\n\r\nexport default class DayTile extends DateComponent<DayTileProps> {\r\n\r\n  segContainerEl: HTMLElement\r\n\r\n  private renderFrame: MemoizedRendering<[DateMarker]>\r\n  private renderFgEvents: MemoizedRendering<[Seg[]]>\r\n  private renderEventSelection: MemoizedRendering<[string]>\r\n  private renderEventDrag: MemoizedRendering<[EventInstanceHash]>\r\n  private renderEventResize: MemoizedRendering<[EventInstanceHash]>\r\n\r\n  constructor(context: ComponentContext, el: HTMLElement) {\r\n    super(context, el)\r\n\r\n    let eventRenderer = this.eventRenderer = new DayTileEventRenderer(this)\r\n\r\n    let renderFrame = this.renderFrame = memoizeRendering(\r\n      this._renderFrame\r\n    )\r\n\r\n    this.renderFgEvents = memoizeRendering(\r\n      eventRenderer.renderSegs.bind(eventRenderer),\r\n      eventRenderer.unrender.bind(eventRenderer),\r\n      [ renderFrame ]\r\n    )\r\n\r\n    this.renderEventSelection = memoizeRendering(\r\n      eventRenderer.selectByInstanceId.bind(eventRenderer),\r\n      eventRenderer.unselectByInstanceId.bind(eventRenderer),\r\n      [ this.renderFgEvents ]\r\n    )\r\n\r\n    this.renderEventDrag = memoizeRendering(\r\n      eventRenderer.hideByHash.bind(eventRenderer),\r\n      eventRenderer.showByHash.bind(eventRenderer),\r\n      [ renderFrame ]\r\n    )\r\n\r\n    this.renderEventResize = memoizeRendering(\r\n      eventRenderer.hideByHash.bind(eventRenderer),\r\n      eventRenderer.showByHash.bind(eventRenderer),\r\n      [ renderFrame ]\r\n    )\r\n\r\n    context.calendar.registerInteractiveComponent(this, {\r\n      el: this.el,\r\n      useEventCenter: false\r\n    })\r\n  }\r\n\r\n  render(props: DayTileProps) {\r\n    this.renderFrame(props.date)\r\n    this.renderFgEvents(props.fgSegs)\r\n    this.renderEventSelection(props.eventSelection)\r\n    this.renderEventDrag(props.eventDragInstances)\r\n    this.renderEventResize(props.eventResizeInstances)\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy()\r\n\r\n    this.renderFrame.unrender() // should unrender everything else\r\n\r\n    this.calendar.unregisterInteractiveComponent(this)\r\n  }\r\n\r\n  _renderFrame(date: DateMarker) {\r\n    let { theme, dateEnv } = this\r\n\r\n    let title = dateEnv.format(\r\n      date,\r\n      createFormatter(this.opt('dayPopoverFormat')) // TODO: cache\r\n    )\r\n\r\n    this.el.innerHTML =\r\n      '<div class=\"fc-header ' + theme.getClass('popoverHeader') + '\">' +\r\n        '<span class=\"fc-title\">' +\r\n          htmlEscape(title) +\r\n        '</span>' +\r\n        '<span class=\"fc-close ' + theme.getIconClass('close') + '\"></span>' +\r\n      '</div>' +\r\n      '<div class=\"fc-body ' + theme.getClass('popoverContent') + '\">' +\r\n        '<div class=\"fc-event-container\"></div>' +\r\n      '</div>'\r\n\r\n    this.segContainerEl = this.el.querySelector('.fc-event-container')\r\n  }\r\n\r\n  queryHit(positionLeft: number, positionTop: number, elWidth: number, elHeight: number): Hit | null {\r\n    let date = (this.props as any).date // HACK\r\n\r\n    if (positionLeft < elWidth && positionTop < elHeight) {\r\n      return {\r\n        component: this,\r\n        dateSpan: {\r\n          allDay: true,\r\n          range: { start: date, end: addDays(date, 1) }\r\n        },\r\n        dayEl: this.el,\r\n        rect: {\r\n          left: 0,\r\n          top: 0,\r\n          right: elWidth,\r\n          bottom: elHeight\r\n        },\r\n        layer: 1\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport class DayTileEventRenderer extends SimpleDayGridEventRenderer {\r\n\r\n  dayTile: DayTile\r\n\r\n  constructor(dayTile) {\r\n    super(dayTile.context)\r\n\r\n    this.dayTile = dayTile\r\n  }\r\n\r\n  attachSegs(segs: Seg[]) {\r\n    for (let seg of segs) {\r\n      this.dayTile.segContainerEl.appendChild(seg.el)\r\n    }\r\n  }\r\n\r\n  detachSegs(segs: Seg[]) {\r\n    for (let seg of segs) {\r\n      removeElement(seg.el)\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  ComponentContext,\r\n  DateMarker,\r\n  getDayClasses,\r\n  rangeContainsMarker,\r\n  DateProfile\r\n} from '@fullcalendar/core'\r\n\r\nexport interface DayBgCell {\r\n  date: DateMarker\r\n  htmlAttrs?: string\r\n}\r\n\r\nexport interface DayBgRowProps {\r\n  cells: DayBgCell[]\r\n  dateProfile: DateProfile\r\n  renderIntroHtml?: () => string\r\n}\r\n\r\nexport default class DayBgRow {\r\n\r\n  context: ComponentContext\r\n\r\n  constructor(context: ComponentContext) {\r\n    this.context = context\r\n  }\r\n\r\n  renderHtml(props: DayBgRowProps) {\r\n    let parts = []\r\n\r\n    if (props.renderIntroHtml) {\r\n      parts.push(props.renderIntroHtml())\r\n    }\r\n\r\n    for (let cell of props.cells) {\r\n      parts.push(\r\n        renderCellHtml(\r\n          cell.date,\r\n          props.dateProfile,\r\n          this.context,\r\n          cell.htmlAttrs\r\n        )\r\n      )\r\n    }\r\n\r\n    if (!props.cells.length) {\r\n      parts.push('<td class=\"fc-day ' + this.context.theme.getClass('widgetContent') + '\"></td>')\r\n    }\r\n\r\n    if (this.context.options.dir === 'rtl') {\r\n      parts.reverse()\r\n    }\r\n\r\n    return '<tr>' + parts.join('') + '</tr>'\r\n  }\r\n\r\n}\r\n\r\nfunction renderCellHtml(date: DateMarker, dateProfile: DateProfile, context: ComponentContext, otherAttrs?) {\r\n  let { dateEnv, theme } = context\r\n  let isDateValid = rangeContainsMarker(dateProfile.activeRange, date) // TODO: called too frequently. cache somehow.\r\n  let classes = getDayClasses(date, dateProfile, context)\r\n\r\n  classes.unshift('fc-day', theme.getClass('widgetContent'))\r\n\r\n  return '<td class=\"' + classes.join(' ') + '\"' +\r\n    (isDateValid ?\r\n      ' data-date=\"' + dateEnv.formatIso(date, { omitTime: true }) + '\"' :\r\n      '') +\r\n    (otherAttrs ?\r\n      ' ' + otherAttrs :\r\n      '') +\r\n    '></td>'\r\n}\r\n","import {\r\n  createElement,\r\n  insertAfterElement,\r\n  findElements,\r\n  findChildren,\r\n  removeElement,\r\n  computeRect,\r\n  PositionCache,\r\n  addDays,\r\n  DateMarker,\r\n  createFormatter,\r\n  DateComponent,\r\n  EventSegUiInteractionState,\r\n  Seg,\r\n  rangeContainsMarker,\r\n  intersectRanges,\r\n  EventRenderRange,\r\n  buildGotoAnchorHtml,\r\n  getDayClasses,\r\n  DateProfile,\r\n  memoizeRendering,\r\n  MemoizedRendering\r\n} from '@fullcalendar/core'\r\nimport Popover from './Popover'\r\nimport DayGridEventRenderer from './DayGridEventRenderer'\r\nimport DayGridMirrorRenderer from './DayGridMirrorRenderer'\r\nimport DayGridFillRenderer from './DayGridFillRenderer'\r\nimport DayTile from './DayTile'\r\nimport DayBgRow from './DayBgRow'\r\nimport moment from 'moment'\r\n\r\nconst DAY_NUM_FORMAT = createFormatter({ day: 'numeric' })\r\nconst WEEK_NUM_FORMAT = createFormatter({ week: 'numeric' })\r\n\r\n\r\n/* A component that renders a grid of whole-days that runs horizontally. There can be multiple rows, one per week.\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nexport interface RenderProps { // TODO: combine with DayGridProps\r\n  renderNumberIntroHtml: (row: number, dayGrid: DayGrid) => string\r\n  renderBgIntroHtml: () => string\r\n  renderIntroHtml: () => string\r\n  colWeekNumbersVisible: boolean // week numbers render in own column? (caller does HTML via intro)\r\n  cellWeekNumbersVisible: boolean // display week numbers in day cell?\r\n}\r\n\r\nexport interface DayGridSeg extends Seg {\r\n  row: number\r\n  firstCol: number\r\n  lastCol: number\r\n}\r\n\r\nexport interface DayGridCell {\r\n  date: DateMarker\r\n  htmlAttrs?: string\r\n}\r\n\r\nexport interface DayGridProps {\r\n  dateProfile: DateProfile\r\n  cells: DayGridCell[][]\r\n  businessHourSegs: DayGridSeg[]\r\n  bgEventSegs: DayGridSeg[]\r\n  fgEventSegs: DayGridSeg[]\r\n  dateSelectionSegs: DayGridSeg[]\r\n  eventSelection: string\r\n  eventDrag: EventSegUiInteractionState | null\r\n  eventResize: EventSegUiInteractionState | null\r\n\r\n  // isRigid determines whether the individual rows should ignore the contents and be a constant height.\r\n  // Relies on the view's colCnt and rowCnt. In the future, this component should probably be self-sufficient.\r\n  isRigid: boolean\r\n}\r\n\r\nexport default class DayGrid extends DateComponent<DayGridProps> {\r\n\r\n  eventRenderer: DayGridEventRenderer\r\n  renderProps: RenderProps\r\n\r\n  rowCnt: number\r\n  colCnt: number\r\n\r\n  bottomCoordPadding: number = 0 // hack for extending the hit area for the last row of the coordinate grid\r\n\r\n  rowEls: HTMLElement[] // set of fake row elements\r\n  cellEls: HTMLElement[] // set of whole-day elements comprising the row's background\r\n\r\n  isCellSizesDirty: boolean = false\r\n  rowPositions: PositionCache\r\n  colPositions: PositionCache\r\n\r\n  segPopover: Popover // the Popover that holds events that can't fit in a cell. null when not visible\r\n  segPopoverTile: DayTile\r\n\r\n  private renderCells: MemoizedRendering<[DayGridCell[][], boolean]>\r\n  private renderBusinessHours: MemoizedRendering<[DayGridSeg[]]>\r\n  private renderDateSelection: MemoizedRendering<[DayGridSeg[]]>\r\n  private renderBgEvents: MemoizedRendering<[DayGridSeg[]]>\r\n  private renderFgEvents: MemoizedRendering<[DayGridSeg[]]>\r\n  private renderEventSelection: MemoizedRendering<[string]>\r\n  private renderEventDrag: MemoizedRendering<[EventSegUiInteractionState]>\r\n  private renderEventResize: MemoizedRendering<[EventSegUiInteractionState]>\r\n\r\n\r\n  constructor(context, el, renderProps: RenderProps) {\r\n    super(context, el)\r\n\r\n    let eventRenderer = this.eventRenderer = new DayGridEventRenderer(this)\r\n    let fillRenderer = this.fillRenderer = new DayGridFillRenderer(this)\r\n    this.mirrorRenderer = new DayGridMirrorRenderer(this)\r\n\r\n    let renderCells = this.renderCells = memoizeRendering(\r\n      this._renderCells,\r\n      this._unrenderCells\r\n    )\r\n\r\n    this.renderBusinessHours = memoizeRendering(\r\n      fillRenderer.renderSegs.bind(fillRenderer, 'businessHours'),\r\n      fillRenderer.unrender.bind(fillRenderer, 'businessHours'),\r\n      [ renderCells ]\r\n    )\r\n\r\n    this.renderDateSelection = memoizeRendering(\r\n      fillRenderer.renderSegs.bind(fillRenderer, 'highlight'),\r\n      fillRenderer.unrender.bind(fillRenderer, 'highlight'),\r\n      [ renderCells ]\r\n    )\r\n\r\n    this.renderBgEvents = memoizeRendering(\r\n      fillRenderer.renderSegs.bind(fillRenderer, 'bgEvent'),\r\n      fillRenderer.unrender.bind(fillRenderer, 'bgEvent'),\r\n      [ renderCells ]\r\n    )\r\n\r\n    this.renderFgEvents = memoizeRendering(\r\n      eventRenderer.renderSegs.bind(eventRenderer),\r\n      eventRenderer.unrender.bind(eventRenderer),\r\n      [ renderCells ]\r\n    )\r\n\r\n    this.renderEventSelection = memoizeRendering(\r\n      eventRenderer.selectByInstanceId.bind(eventRenderer),\r\n      eventRenderer.unselectByInstanceId.bind(eventRenderer),\r\n      [ this.renderFgEvents ]\r\n    )\r\n\r\n    this.renderEventDrag = memoizeRendering(\r\n      this._renderEventDrag,\r\n      this._unrenderEventDrag,\r\n      [ renderCells ]\r\n    )\r\n\r\n    this.renderEventResize = memoizeRendering(\r\n      this._renderEventResize,\r\n      this._unrenderEventResize,\r\n      [ renderCells ]\r\n    )\r\n\r\n    this.renderProps = renderProps\r\n  }\r\n\r\n\r\n  render(props: DayGridProps) {\r\n    let cells = props.cells\r\n    this.rowCnt = cells.length\r\n    this.colCnt = cells[0].length\r\n\r\n    this.renderCells(cells, props.isRigid)\r\n    this.renderBusinessHours(props.businessHourSegs)\r\n    this.renderDateSelection(props.dateSelectionSegs)\r\n    this.renderBgEvents(props.bgEventSegs)\r\n    this.renderFgEvents(props.fgEventSegs)\r\n    this.renderEventSelection(props.eventSelection)\r\n    this.renderEventDrag(props.eventDrag)\r\n    this.renderEventResize(props.eventResize)\r\n\r\n    if (this.segPopoverTile) {\r\n      this.updateSegPopoverTile()\r\n    }\r\n  }\r\n\r\n\r\n  destroy() {\r\n    super.destroy()\r\n\r\n    this.renderCells.unrender() // will unrender everything else\r\n  }\r\n\r\n\r\n  getCellRange(row, col) {\r\n    let start = this.props.cells[row][col].date\r\n    let end = addDays(start, 1)\r\n\r\n    return { start, end }\r\n  }\r\n\r\n\r\n  updateSegPopoverTile(date?, segs?) {\r\n    let ownProps = this.props\r\n\r\n    this.segPopoverTile.receiveProps({\r\n      date: date || (this.segPopoverTile.props as any).date,\r\n      fgSegs: segs || (this.segPopoverTile.props as any).fgSegs,\r\n      eventSelection: ownProps.eventSelection,\r\n      eventDragInstances: ownProps.eventDrag ? ownProps.eventDrag.affectedInstances : null,\r\n      eventResizeInstances: ownProps.eventResize ? ownProps.eventResize.affectedInstances : null\r\n    })\r\n  }\r\n\r\n\r\n  /* Date Rendering\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  _renderCells(cells: DayGridCell[][], isRigid: boolean) {\r\n    let { view, dateEnv } = this\r\n    let { rowCnt, colCnt } = this\r\n    let html = ''\r\n    let row\r\n    let col\r\n\r\n    for (row = 0; row < rowCnt; row++) {\r\n      html += this.renderDayRowHtml(row, isRigid)\r\n    }\r\n    this.el.innerHTML = html\r\n\r\n    this.rowEls = findElements(this.el, '.fc-row')\r\n    this.cellEls = findElements(this.el, '.fc-day, .fc-disabled-day')\r\n\r\n    if (this.isRtl) {\r\n      this.cellEls.reverse()\r\n    }\r\n\r\n    this.rowPositions = new PositionCache(\r\n      this.el,\r\n      this.rowEls,\r\n      false,\r\n      true // vertical\r\n    )\r\n\r\n    this.colPositions = new PositionCache(\r\n      this.el,\r\n      this.cellEls.slice(0, colCnt), // only the first row\r\n      true,\r\n      false // horizontal\r\n    )\r\n\r\n    // trigger dayRender with each cell's element\r\n    for (row = 0; row < rowCnt; row++) {\r\n      for (col = 0; col < colCnt; col++) {\r\n        if (cells[row][col] === undefined) {\r\n          break\r\n        }\r\n        if (cells[row][col].date != null) {\r\n          this.publiclyTrigger('dayRender', [\r\n            {\r\n              date: dateEnv.toDate(cells[row][col].date),\r\n              el: this.getCellEl(row, col),\r\n              view\r\n            }\r\n          ])\r\n        }\r\n      }\r\n    }\r\n\r\n    this.isCellSizesDirty = true\r\n  }\r\n\r\n\r\n  _unrenderCells() {\r\n    this.removeSegPopover()\r\n  }\r\n\r\n\r\n  // Generates the HTML for a single row, which is a div that wraps a table.\r\n  // `row` is the row number.\r\n  renderDayRowHtml(row, isRigid) {\r\n    let { theme } = this\r\n    let classes = [ 'fc-row', 'fc-week', theme.getClass('dayRow') ]\r\n\r\n    if (isRigid) {\r\n      classes.push('fc-rigid')\r\n    }\r\n\r\n    let bgRow = new DayBgRow(this.context)\r\n\r\n    return '' +\r\n      '<div class=\"' + classes.join(' ') + '\">' +\r\n        '<div class=\"fc-row-monthname fc-content\"><span>' + moment(this.props.cells[row][0].date).format('MMM') + '</span></div>' +\r\n        '<div class=\"fc-bg\">' +\r\n          '<table class=\"' + theme.getClass('tableGrid') + '\">' +\r\n            bgRow.renderHtml({\r\n              cells: this.props.cells[row],\r\n              dateProfile: this.props.dateProfile,\r\n              renderIntroHtml: this.renderProps.renderBgIntroHtml\r\n            }) +\r\n          '</table>' +\r\n        '</div>' +\r\n        '<div class=\"fc-content-skeleton\">' +\r\n          '<table>' +\r\n            (this.getIsNumbersVisible() ?\r\n              '<thead>' +\r\n                this.renderNumberTrHtml(row) +\r\n              '</thead>' :\r\n              ''\r\n              ) +\r\n          '</table>' +\r\n        '</div>' +\r\n      '</div>'\r\n  }\r\n\r\n\r\n  getIsNumbersVisible() {\r\n    return this.getIsDayNumbersVisible() ||\r\n      this.renderProps.cellWeekNumbersVisible ||\r\n      this.renderProps.colWeekNumbersVisible\r\n  }\r\n\r\n\r\n  getIsDayNumbersVisible() {\r\n    return this.rowCnt > 1\r\n  }\r\n\r\n\r\n  /* Grid Number Rendering\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  renderNumberTrHtml(row: number) {\r\n    let intro = this.renderProps.renderNumberIntroHtml(row, this)\r\n\r\n    return '' +\r\n      '<tr>' +\r\n        (this.isRtl ? '' : intro) +\r\n        this.renderNumberCellsHtml(row) +\r\n        (this.isRtl ? intro : '') +\r\n      '</tr>'\r\n  }\r\n\r\n\r\n  renderNumberCellsHtml(row) {\r\n    let htmls = []\r\n    let col\r\n    let date\r\n\r\n    for (col = 0; col < this.colCnt; col++) {\r\n      date = this.props.cells[row][col].date\r\n      htmls.push(this.renderNumberCellHtml(date))\r\n    }\r\n\r\n    if (this.isRtl) {\r\n      htmls.reverse()\r\n    }\r\n\r\n    return htmls.join('')\r\n  }\r\n\r\n\r\n  // Generates the HTML for the <td>s of the \"number\" row in the DayGrid's content skeleton.\r\n  // The number row will only exist if either day numbers or week numbers are turned on.\r\n  renderNumberCellHtml(date) {\r\n    if (date === null) {\r\n      return '<td></td>'\r\n    }\r\n    let { view, dateEnv } = this\r\n    let html = ''\r\n    let isDateValid = rangeContainsMarker(this.props.dateProfile.activeRange, date) // TODO: called too frequently. cache somehow.\r\n    let isDayNumberVisible = this.getIsDayNumbersVisible() && isDateValid\r\n    let classes\r\n    let weekCalcFirstDow\r\n\r\n    if (!isDayNumberVisible && !this.renderProps.cellWeekNumbersVisible) {\r\n      // no numbers in day cell (week number must be along the side)\r\n      return '<td></td>' //  will create an empty space above events :(\r\n    }\r\n\r\n    classes = getDayClasses(date, this.props.dateProfile, this.context)\r\n    classes.unshift('fc-day-top')\r\n\r\n    if (this.renderProps.cellWeekNumbersVisible) {\r\n      weekCalcFirstDow = dateEnv.weekDow\r\n    }\r\n\r\n    html += '<td class=\"' + classes.join(' ') + '\"' +\r\n      (isDateValid ?\r\n        ' data-date=\"' + dateEnv.formatIso(date, { omitTime: true }) + '\"' :\r\n        ''\r\n        ) +\r\n      '>'\r\n\r\n    if (this.renderProps.cellWeekNumbersVisible && (date.getUTCDay() === weekCalcFirstDow)) {\r\n      html += buildGotoAnchorHtml(\r\n        view,\r\n        { date, type: 'week' },\r\n        { 'class': 'fc-week-number' },\r\n        dateEnv.format(date, WEEK_NUM_FORMAT) // inner HTML\r\n      )\r\n    }\r\n\r\n    if (isDayNumberVisible) {\r\n      html += buildGotoAnchorHtml(\r\n          view,\r\n          date,\r\n          { 'class': 'fc-day-number' },\r\n          '<span class=\"fc-day-number-weekday\">' + moment(date).format('dd') + '</span>' + dateEnv.format(date, DAY_NUM_FORMAT) // inner HTML\r\n      )\r\n    }\r\n\r\n    html += '</td>'\r\n\r\n    return html\r\n  }\r\n\r\n\r\n  /* Sizing\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  updateSize(isResize: boolean) {\r\n    let { fillRenderer, eventRenderer, mirrorRenderer } = this\r\n\r\n    if (\r\n      isResize ||\r\n      this.isCellSizesDirty ||\r\n      this.view.calendar.isEventsUpdated // hack\r\n    ) {\r\n      this.buildPositionCaches()\r\n      this.isCellSizesDirty = false\r\n    }\r\n\r\n    fillRenderer.computeSizes(isResize)\r\n    eventRenderer.computeSizes(isResize)\r\n    mirrorRenderer.computeSizes(isResize)\r\n\r\n    fillRenderer.assignSizes(isResize)\r\n    eventRenderer.assignSizes(isResize)\r\n    mirrorRenderer.assignSizes(isResize)\r\n  }\r\n\r\n\r\n  buildPositionCaches() {\r\n    this.buildColPositions()\r\n    this.buildRowPositions()\r\n  }\r\n\r\n\r\n  buildColPositions() {\r\n    this.colPositions.build()\r\n  }\r\n\r\n\r\n  buildRowPositions() {\r\n    this.rowPositions.build()\r\n    this.rowPositions.bottoms[this.rowCnt - 1] += this.bottomCoordPadding // hack\r\n  }\r\n\r\n\r\n  /* Hit System\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n  positionToHit(leftPosition, topPosition) {\r\n    let { colPositions, rowPositions } = this\r\n\r\n    let col = colPositions.leftToIndex(leftPosition)\r\n    let row = rowPositions.topToIndex(topPosition)\r\n    \r\n    if (row != null && col != null && this.props.cells[row][col].date !== null) {\r\n      return {\r\n        row,\r\n        col,\r\n        dateSpan: {\r\n          range: this.getCellRange(row, col),\r\n          allDay: true\r\n        },\r\n        dayEl: this.getCellEl(row, col),\r\n        relativeRect: {\r\n          left: colPositions.lefts[col],\r\n          right: colPositions.rights[col],\r\n          top: rowPositions.tops[row],\r\n          bottom: rowPositions.bottoms[row]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /* Cell System\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n  // FYI: the first column is the leftmost column, regardless of date\r\n\r\n\r\n  getCellEl(row, col) {\r\n    return this.cellEls[row * this.colCnt + col]\r\n  }\r\n\r\n\r\n  /* Event Drag Visualization\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  _renderEventDrag(state: EventSegUiInteractionState) {\r\n    if (state) {\r\n      this.eventRenderer.hideByHash(state.affectedInstances)\r\n      this.fillRenderer.renderSegs('highlight', state.segs)\r\n    }\r\n  }\r\n\r\n\r\n  _unrenderEventDrag(state: EventSegUiInteractionState) {\r\n    if (state) {\r\n      this.eventRenderer.showByHash(state.affectedInstances)\r\n      this.fillRenderer.unrender('highlight')\r\n    }\r\n  }\r\n\r\n\r\n  /* Event Resize Visualization\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  _renderEventResize(state: EventSegUiInteractionState) {\r\n    if (state) {\r\n      this.eventRenderer.hideByHash(state.affectedInstances)\r\n      this.fillRenderer.renderSegs('highlight', state.segs)\r\n      this.mirrorRenderer.renderSegs(state.segs, { isResizing: true, sourceSeg: state.sourceSeg })\r\n    }\r\n  }\r\n\r\n\r\n  _unrenderEventResize(state: EventSegUiInteractionState) {\r\n    if (state) {\r\n      this.eventRenderer.showByHash(state.affectedInstances)\r\n      this.fillRenderer.unrender('highlight')\r\n      this.mirrorRenderer.unrender(state.segs, { isResizing: true, sourceSeg: state.sourceSeg })\r\n    }\r\n  }\r\n\r\n\r\n  /* More+ Link Popover\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  removeSegPopover() {\r\n    if (this.segPopover) {\r\n      this.segPopover.hide() // in handler, will call segPopover's removeElement\r\n    }\r\n  }\r\n\r\n\r\n  // Limits the number of \"levels\" (vertically stacking layers of events) for each row of the grid.\r\n  // `levelLimit` can be false (don't limit), a number, or true (should be computed).\r\n  limitRows(levelLimit) {\r\n    let rowStructs = this.eventRenderer.rowStructs || []\r\n    let row // row #\r\n    let rowLevelLimit\r\n\r\n    for (row = 0; row < rowStructs.length; row++) {\r\n      this.unlimitRow(row)\r\n\r\n      if (!levelLimit) {\r\n        rowLevelLimit = false\r\n      } else if (typeof levelLimit === 'number') {\r\n        rowLevelLimit = levelLimit\r\n      } else {\r\n        rowLevelLimit = this.computeRowLevelLimit(row)\r\n      }\r\n\r\n      if (rowLevelLimit !== false) {\r\n        this.limitRow(row, rowLevelLimit)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // Computes the number of levels a row will accomodate without going outside its bounds.\r\n  // Assumes the row is \"rigid\" (maintains a constant height regardless of what is inside).\r\n  // `row` is the row number.\r\n  computeRowLevelLimit(row): (number | false) {\r\n    let rowEl = this.rowEls[row] // the containing \"fake\" row div\r\n    let rowBottom = rowEl.getBoundingClientRect().bottom // relative to viewport!\r\n    let trEls = findChildren(this.eventRenderer.rowStructs[row].tbodyEl) as HTMLTableRowElement[]\r\n    let i\r\n    let trEl: HTMLTableRowElement\r\n\r\n    // Reveal one level <tr> at a time and stop when we find one out of bounds\r\n    for (i = 0; i < trEls.length; i++) {\r\n      trEl = trEls[i]\r\n      trEl.classList.remove('fc-limited') // reset to original state (reveal)\r\n\r\n      if (trEl.getBoundingClientRect().bottom > rowBottom) {\r\n        return i\r\n      }\r\n    }\r\n\r\n    return false // should not limit at all\r\n  }\r\n\r\n\r\n  // Limits the given grid row to the maximum number of levels and injects \"more\" links if necessary.\r\n  // `row` is the row number.\r\n  // `levelLimit` is a number for the maximum (inclusive) number of levels allowed.\r\n  limitRow(row, levelLimit) {\r\n    let { colCnt, isRtl } = this\r\n    let rowStruct = this.eventRenderer.rowStructs[row]\r\n    let moreNodes = [] // array of \"more\" <a> links and <td> DOM nodes\r\n    let col = 0 // col #, left-to-right (not chronologically)\r\n    let levelSegs // array of segment objects in the last allowable level, ordered left-to-right\r\n    let cellMatrix // a matrix (by level, then column) of all <td> elements in the row\r\n    let limitedNodes // array of temporarily hidden level <tr> and segment <td> DOM nodes\r\n    let i\r\n    let seg\r\n    let segsBelow // array of segment objects below `seg` in the current `col`\r\n    let totalSegsBelow // total number of segments below `seg` in any of the columns `seg` occupies\r\n    let colSegsBelow // array of segment arrays, below seg, one for each column (offset from segs's first column)\r\n    let td: HTMLTableCellElement\r\n    let rowSpan\r\n    let segMoreNodes // array of \"more\" <td> cells that will stand-in for the current seg's cell\r\n    let j\r\n    let moreTd: HTMLTableCellElement\r\n    let moreWrap\r\n    let moreLink\r\n\r\n    // Iterates through empty level cells and places \"more\" links inside if need be\r\n    let emptyCellsUntil = (endCol) => { // goes from current `col` to `endCol`\r\n      while (col < endCol) {\r\n        segsBelow = this.getCellSegs(row, col, levelLimit)\r\n        if (segsBelow.length) {\r\n          td = cellMatrix[levelLimit - 1][col]\r\n          moreLink = this.renderMoreLink(row, col, segsBelow)\r\n          moreWrap = createElement('div', null, moreLink)\r\n          td.appendChild(moreWrap)\r\n          moreNodes.push(moreWrap)\r\n        }\r\n        col++\r\n      }\r\n    }\r\n\r\n    if (levelLimit && levelLimit < rowStruct.segLevels.length) { // is it actually over the limit?\r\n      levelSegs = rowStruct.segLevels[levelLimit - 1]\r\n      cellMatrix = rowStruct.cellMatrix\r\n\r\n      limitedNodes = findChildren(rowStruct.tbodyEl).slice(levelLimit) // get level <tr> elements past the limit\r\n      limitedNodes.forEach(function(node) {\r\n        node.classList.add('fc-limited') // hide elements and get a simple DOM-nodes array\r\n      })\r\n\r\n      // iterate though segments in the last allowable level\r\n      for (i = 0; i < levelSegs.length; i++) {\r\n        seg = levelSegs[i]\r\n        let leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol\r\n        let rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol\r\n\r\n        emptyCellsUntil(leftCol) // process empty cells before the segment\r\n\r\n        // determine *all* segments below `seg` that occupy the same columns\r\n        colSegsBelow = []\r\n        totalSegsBelow = 0\r\n        while (col <= rightCol) {\r\n          segsBelow = this.getCellSegs(row, col, levelLimit)\r\n          colSegsBelow.push(segsBelow)\r\n          totalSegsBelow += segsBelow.length\r\n          col++\r\n        }\r\n\r\n        if (totalSegsBelow) { // do we need to replace this segment with one or many \"more\" links?\r\n          td = cellMatrix[levelLimit - 1][leftCol] // the segment's parent cell\r\n          rowSpan = td.rowSpan || 1\r\n          segMoreNodes = []\r\n\r\n          // make a replacement <td> for each column the segment occupies. will be one for each colspan\r\n          for (j = 0; j < colSegsBelow.length; j++) {\r\n            moreTd = createElement('td', { className: 'fc-more-cell', rowSpan }) as HTMLTableCellElement\r\n            segsBelow = colSegsBelow[j]\r\n            moreLink = this.renderMoreLink(\r\n              row,\r\n              leftCol + j,\r\n              [ seg ].concat(segsBelow) // count seg as hidden too\r\n            )\r\n            moreWrap = createElement('div', null, moreLink)\r\n            moreTd.appendChild(moreWrap)\r\n            segMoreNodes.push(moreTd)\r\n            moreNodes.push(moreTd)\r\n          }\r\n\r\n          td.classList.add('fc-limited')\r\n          insertAfterElement(td, segMoreNodes)\r\n\r\n          limitedNodes.push(td)\r\n        }\r\n      }\r\n\r\n      emptyCellsUntil(this.colCnt) // finish off the level\r\n      rowStruct.moreEls = moreNodes // for easy undoing later\r\n      rowStruct.limitedEls = limitedNodes // for easy undoing later\r\n    }\r\n  }\r\n\r\n\r\n  // Reveals all levels and removes all \"more\"-related elements for a grid's row.\r\n  // `row` is a row number.\r\n  unlimitRow(row) {\r\n    let rowStruct = this.eventRenderer.rowStructs[row]\r\n\r\n    if (rowStruct.moreEls) {\r\n      rowStruct.moreEls.forEach(removeElement)\r\n      rowStruct.moreEls = null\r\n    }\r\n\r\n    if (rowStruct.limitedEls) {\r\n      rowStruct.limitedEls.forEach(function(limitedEl) {\r\n        limitedEl.classList.remove('fc-limited')\r\n      })\r\n      rowStruct.limitedEls = null\r\n    }\r\n  }\r\n\r\n\r\n  // Renders an <a> element that represents hidden event element for a cell.\r\n  // Responsible for attaching click handler as well.\r\n  renderMoreLink(row, col, hiddenSegs) {\r\n    let { view, dateEnv } = this\r\n\r\n    let a = createElement('a', { className: 'fc-more' })\r\n    a.innerText = this.getMoreLinkText(hiddenSegs.length)\r\n    a.addEventListener('click', (ev) => {\r\n      let clickOption = this.opt('eventLimitClick')\r\n      let _col = this.isRtl ? this.colCnt - col - 1 : col // HACK: props.cells has different dir system?\r\n      let date = this.props.cells[row][_col].date\r\n      let moreEl = ev.currentTarget as HTMLElement\r\n      let dayEl = this.getCellEl(row, col)\r\n      let allSegs = this.getCellSegs(row, col)\r\n\r\n      // rescope the segments to be within the cell's date\r\n      let reslicedAllSegs = this.resliceDaySegs(allSegs, date)\r\n      let reslicedHiddenSegs = this.resliceDaySegs(hiddenSegs, date)\r\n\r\n      if (typeof clickOption === 'function') {\r\n        // the returned value can be an atomic option\r\n        clickOption = this.publiclyTrigger('eventLimitClick', [\r\n          {\r\n            date: dateEnv.toDate(date),\r\n            allDay: true,\r\n            dayEl: dayEl,\r\n            moreEl: moreEl,\r\n            segs: reslicedAllSegs,\r\n            hiddenSegs: reslicedHiddenSegs,\r\n            jsEvent: ev,\r\n            view\r\n          }\r\n        ])\r\n      }\r\n\r\n      if (clickOption === 'popover') {\r\n        this.showSegPopover(row, col, moreEl, reslicedAllSegs)\r\n      } else if (typeof clickOption === 'string') { // a view name\r\n        view.calendar.zoomTo(date, clickOption)\r\n      }\r\n    })\r\n\r\n    return a\r\n  }\r\n\r\n\r\n  // Reveals the popover that displays all events within a cell\r\n  showSegPopover(row, col, moreLink: HTMLElement, segs) {\r\n    let { calendar, view, theme } = this\r\n    let _col = this.isRtl ? this.colCnt - col - 1 : col // HACK: props.cells has different dir system?\r\n    let moreWrap = moreLink.parentNode as HTMLElement // the <div> wrapper around the <a>\r\n    let topEl: HTMLElement // the element we want to match the top coordinate of\r\n    let options\r\n\r\n    if (this.rowCnt === 1) {\r\n      topEl = view.el // will cause the popover to cover any sort of header\r\n    } else {\r\n      topEl = this.rowEls[row] // will align with top of row\r\n    }\r\n\r\n    options = {\r\n      className: 'fc-more-popover ' + theme.getClass('popover'),\r\n      parentEl: view.el, // will be outside of all scrollers within the view\r\n      top: computeRect(topEl).top,\r\n      autoHide: true, // when the user clicks elsewhere, hide the popover\r\n      content: (el) => {\r\n        this.segPopoverTile = new DayTile(\r\n          this.context,\r\n          el\r\n        )\r\n        this.updateSegPopoverTile(\r\n          this.props.cells[row][_col].date,\r\n          segs\r\n        )\r\n      },\r\n      hide: () => {\r\n        this.segPopoverTile.destroy()\r\n        this.segPopoverTile = null\r\n        this.segPopover.destroy()\r\n        this.segPopover = null\r\n      }\r\n    }\r\n\r\n    // Determine horizontal coordinate.\r\n    // We use the moreWrap instead of the <td> to avoid border confusion.\r\n    if (this.isRtl) {\r\n      options.right = computeRect(moreWrap).right + 1 // +1 to be over cell border\r\n    } else {\r\n      options.left = computeRect(moreWrap).left - 1 // -1 to be over cell border\r\n    }\r\n\r\n    this.segPopover = new Popover(options)\r\n    this.segPopover.show()\r\n    calendar.releaseAfterSizingTriggers() // hack for eventPositioned\r\n  }\r\n\r\n\r\n  // Given the events within an array of segment objects, reslice them to be in a single day\r\n  resliceDaySegs(segs, dayDate) {\r\n    let dayStart = dayDate\r\n    let dayEnd = addDays(dayStart, 1)\r\n    let dayRange = { start: dayStart, end: dayEnd }\r\n    let newSegs = []\r\n\r\n    for (let seg of segs) {\r\n      let eventRange = seg.eventRange\r\n      let origRange = eventRange.range\r\n      let slicedRange = intersectRanges(origRange, dayRange)\r\n\r\n      if (slicedRange) {\r\n        newSegs.push({\r\n          ...seg,\r\n          eventRange: {\r\n            def: eventRange.def,\r\n            ui: { ...eventRange.ui, durationEditable: false }, // hack to disable resizing\r\n            instance: eventRange.instance,\r\n            range: slicedRange\r\n          } as EventRenderRange,\r\n          isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\r\n          isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\r\n        })\r\n      }\r\n    }\r\n\r\n    return newSegs\r\n  }\r\n\r\n\r\n  // Generates the text that should be inside a \"more\" link, given the number of events it represents\r\n  getMoreLinkText(num) {\r\n    let opt = this.opt('eventLimitText')\r\n\r\n    if (typeof opt === 'function') {\r\n      return opt(num)\r\n    } else {\r\n      return '+' + num + ' ' + opt\r\n    }\r\n  }\r\n\r\n\r\n  // Returns segments within a given cell.\r\n  // If `startLevel` is specified, returns only events including and below that level. Otherwise returns all segs.\r\n  getCellSegs(row, col, startLevel?) {\r\n    let segMatrix = this.eventRenderer.rowStructs[row].segMatrix\r\n    let level = startLevel || 0\r\n    let segs = []\r\n    let seg\r\n\r\n    while (level < segMatrix.length) {\r\n      seg = segMatrix[level][col]\r\n      if (seg) {\r\n        segs.push(seg)\r\n      }\r\n      level++\r\n    }\r\n\r\n    return segs\r\n  }\r\n\r\n}\r\n","import {\r\n  htmlEscape, createElement, findElements,\r\n  matchCellWidths,\r\n  uncompensateScroll,\r\n  compensateScroll,\r\n  subtractInnerElHeight,\r\n  distributeHeight,\r\n  undistributeHeight,\r\n  createFormatter,\r\n  ScrollComponent,\r\n  View,\r\n  buildGotoAnchorHtml,\r\n  ComponentContext,\r\n  ViewSpec,\r\n  DateProfileGenerator,\r\n  Duration\r\n} from '@fullcalendar/core'\r\nimport DayGridDateProfileGenerator from './DayGridDateProfileGenerator'\r\nimport DayGrid from './DayGrid'\r\n\r\nconst WEEK_NUM_FORMAT = createFormatter({ week: 'numeric' })\r\n\r\n\r\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n// It is a manager for a DayGrid subcomponent, which does most of the heavy lifting.\r\n// It is responsible for managing width/height.\r\n\r\nexport default abstract class DayGridView extends View {\r\n\r\n  scroller: ScrollComponent\r\n  dayGrid: DayGrid // the main subcomponent that does most of the heavy lifting\r\n\r\n  colWeekNumbersVisible: boolean\r\n  weekNumberWidth: number\r\n\r\n\r\n  constructor(context: ComponentContext, viewSpec: ViewSpec, dateProfileGenerator: DateProfileGenerator, parentEl: HTMLElement) {\r\n    super(context, viewSpec, dateProfileGenerator, parentEl)\r\n\r\n    this.el.classList.add('fc-dayGrid-view')\r\n    this.el.innerHTML = this.renderSkeletonHtml()\r\n\r\n    this.scroller = new ScrollComponent(\r\n      'hidden', // overflow x\r\n      'auto' // overflow y\r\n    )\r\n\r\n    let dayGridContainerEl = this.scroller.el\r\n    this.el.querySelector('.fc-body > tr > td').appendChild(dayGridContainerEl)\r\n    dayGridContainerEl.classList.add('fc-day-grid-container')\r\n    dayGridContainerEl.classList.add('fc-year-container')\r\n    let dayGridEl = createElement('div', { className: 'fc-day-grid' })\r\n    dayGridContainerEl.appendChild(dayGridEl)\r\n\r\n    let cellWeekNumbersVisible\r\n\r\n    if (this.opt('weekNumbers')) {\r\n      if (this.opt('weekNumbersWithinDays')) {\r\n        cellWeekNumbersVisible = true\r\n        this.colWeekNumbersVisible = false\r\n      } else {\r\n        cellWeekNumbersVisible = false\r\n        this.colWeekNumbersVisible = true\r\n      }\r\n    } else {\r\n      this.colWeekNumbersVisible = false\r\n      cellWeekNumbersVisible = false\r\n    }\r\n\r\n    this.dayGrid = new DayGrid(\r\n      this.context,\r\n      dayGridEl,\r\n      {\r\n        renderNumberIntroHtml: this.renderDayGridNumberIntroHtml,\r\n        renderBgIntroHtml: this.renderDayGridBgIntroHtml,\r\n        renderIntroHtml: this.renderDayGridIntroHtml,\r\n        colWeekNumbersVisible: this.colWeekNumbersVisible,\r\n        cellWeekNumbersVisible\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  destroy() {\r\n    super.destroy()\r\n\r\n    this.dayGrid.destroy()\r\n    this.scroller.destroy()\r\n  }\r\n\r\n  // Builds the HTML skeleton for the view.\r\n  // The day-grid component will render inside of a container defined by this HTML.\r\n  renderSkeletonHtml() {\r\n    let { theme } = this\r\n \r\n    return '' +\r\n      '<table class=\"' + theme.getClass('tableGrid') + '\">' +\r\n        (this.opt('columnHeader') ?\r\n          '<thead class=\"fc-head\">' +\r\n            '<tr>' +\r\n              '<td class=\"fc-head-container ' + theme.getClass('widgetHeader') + '\">&nbsp;</td>' +\r\n            '</tr>' +\r\n          '</thead>' :\r\n          ''\r\n          ) +\r\n        '<tbody class=\"fc-body\">' +\r\n          '<tr>' +\r\n            '<td class=\"' + theme.getClass('widgetContent') + '\"></td>' +\r\n          '</tr>' +\r\n        '</tbody>' +\r\n      '</table>'\r\n  }\r\n\r\n\r\n  // Generates an HTML attribute string for setting the width of the week number column, if it is known\r\n  weekNumberStyleAttr() {\r\n    if (this.weekNumberWidth != null) {\r\n      return 'style=\"width:' + this.weekNumberWidth + 'px\"'\r\n    }\r\n    return ''\r\n  }\r\n\r\n\r\n  // Determines whether each row should have a constant height\r\n  hasRigidRows() {\r\n    let eventLimit = this.opt('eventLimit')\r\n\r\n    return eventLimit && typeof eventLimit !== 'number'\r\n  }\r\n\r\n\r\n  /* Dimensions\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  updateSize(isResize: boolean, viewHeight: number, isAuto: boolean) {\r\n    super.updateSize(isResize, viewHeight, isAuto) // will call updateBaseSize. important that executes first\r\n\r\n    this.dayGrid.updateSize(isResize)\r\n  }\r\n\r\n\r\n  // Refreshes the horizontal dimensions of the view\r\n  updateBaseSize(isResize: boolean, viewHeight: number, isAuto: boolean) {\r\n    let { dayGrid } = this\r\n    let eventLimit = this.opt('eventLimit')\r\n    let headRowEl = (this as any).header ? (this as any).header.el : null // HACK\r\n    let scrollerHeight\r\n    let scrollbarWidths\r\n\r\n    // hack to give the view some height prior to dayGrid's columns being rendered\r\n    // TODO: separate setting height from scroller VS dayGrid.\r\n    if (!dayGrid.rowEls) {\r\n      if (!isAuto) {\r\n        scrollerHeight = this.computeScrollerHeight(viewHeight)\r\n        this.scroller.setHeight(scrollerHeight)\r\n      }\r\n      return\r\n    }\r\n\r\n    if (this.colWeekNumbersVisible) {\r\n      // Make sure all week number cells running down the side have the same width.\r\n      this.weekNumberWidth = matchCellWidths(\r\n        findElements(this.el, '.fc-week-number')\r\n      )\r\n    }\r\n\r\n    // reset all heights to be natural\r\n    this.scroller.clear()\r\n    if (headRowEl) {\r\n      uncompensateScroll(headRowEl)\r\n    }\r\n\r\n    dayGrid.removeSegPopover() // kill the \"more\" popover if displayed\r\n\r\n    // is the event limit a constant level number?\r\n    if (eventLimit && typeof eventLimit === 'number') {\r\n      dayGrid.limitRows(eventLimit) // limit the levels first so the height can redistribute after\r\n    }\r\n\r\n    // distribute the height to the rows\r\n    // (viewHeight is a \"recommended\" value if isAuto)\r\n    scrollerHeight = this.computeScrollerHeight(viewHeight)\r\n    this.setGridHeight(scrollerHeight, isAuto)\r\n\r\n    // is the event limit dynamically calculated?\r\n    if (eventLimit && typeof eventLimit !== 'number') {\r\n      dayGrid.limitRows(eventLimit) // limit the levels after the grid's row heights have been set\r\n    }\r\n\r\n    if (!isAuto) { // should we force dimensions of the scroll container?\r\n\r\n      this.scroller.setHeight(scrollerHeight)\r\n      scrollbarWidths = this.scroller.getScrollbarWidths()\r\n\r\n      if (scrollbarWidths.left || scrollbarWidths.right) { // using scrollbars?\r\n\r\n        if (headRowEl) {\r\n          compensateScroll(headRowEl, scrollbarWidths)\r\n        }\r\n\r\n        // doing the scrollbar compensation might have created text overflow which created more height. redo\r\n        scrollerHeight = this.computeScrollerHeight(viewHeight)\r\n        this.scroller.setHeight(scrollerHeight)\r\n      }\r\n\r\n      // guarantees the same scrollbar widths\r\n      this.scroller.lockOverflow(scrollbarWidths)\r\n    }\r\n  }\r\n\r\n\r\n  // given a desired total height of the view, returns what the height of the scroller should be\r\n  computeScrollerHeight(viewHeight) {\r\n    return viewHeight -\r\n      subtractInnerElHeight(this.el, this.scroller.el) // everything that's NOT the scroller\r\n  }\r\n\r\n\r\n  // Sets the height of just the DayGrid component in this view\r\n  setGridHeight(height, isAuto) {\r\n\r\n    if (this.opt('monthMode')) {\r\n\r\n      // if auto, make the height of each row the height that it would be if there were 6 weeks\r\n      if (isAuto) {\r\n        height *= this.dayGrid.rowCnt / 6\r\n      }\r\n\r\n      distributeHeight(this.dayGrid.rowEls, height, !isAuto) // if auto, don't compensate for height-hogging rows\r\n\r\n    } else {\r\n\r\n      if (isAuto) {\r\n        undistributeHeight(this.dayGrid.rowEls) // let the rows be their natural height with no expanding\r\n      } else {\r\n        distributeHeight(this.dayGrid.rowEls, height, true) // true = compensate for height-hogging rows\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /* Scroll\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  computeDateScroll(duration: Duration) {\r\n    return { top: 0 }\r\n  }\r\n\r\n\r\n  queryDateScroll() {\r\n    return { top: this.scroller.getScrollTop() }\r\n  }\r\n\r\n\r\n  applyDateScroll(scroll) {\r\n    if (scroll.top !== undefined) {\r\n      this.scroller.setScrollTop(scroll.top)\r\n    }\r\n  }\r\n\r\n\r\n  /* Header Rendering\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  // Generates the HTML that will go before the day-of week header cells\r\n  renderHeadIntroHtml = () => {\r\n    let { theme } = this\r\n\r\n    if (this.colWeekNumbersVisible) {\r\n      return '' +\r\n        '<th class=\"fc-week-number ' + theme.getClass('widgetHeader') + '\" ' + this.weekNumberStyleAttr() + '>' +\r\n          '<span>' + // needed for matchCellWidths\r\n            htmlEscape(this.opt('weekLabel')) +\r\n          '</span>' +\r\n        '</th>'\r\n    }\r\n\r\n    return ''\r\n  }\r\n\r\n\r\n  /* Day Grid Rendering\r\n  ------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n  // Generates the HTML that will go before content-skeleton cells that display the day/week numbers\r\n  renderDayGridNumberIntroHtml = (row: number, dayGrid: DayGrid) => {\r\n    let { dateEnv } = this\r\n    let weekStart = dayGrid.props.cells[row][0].date\r\n\r\n    if (this.colWeekNumbersVisible) {\r\n      return '' +\r\n        '<td class=\"fc-week-number\" ' + this.weekNumberStyleAttr() + '>' +\r\n          buildGotoAnchorHtml( // aside from link, important for matchCellWidths\r\n            this,\r\n            { date: weekStart, type: 'week', forceOff: dayGrid.colCnt === 1 },\r\n            dateEnv.format(weekStart, WEEK_NUM_FORMAT) // inner HTML\r\n          ) +\r\n        '</td>'\r\n    }\r\n\r\n    return ''\r\n  }\r\n\r\n\r\n  // Generates the HTML that goes before the day bg cells for each day-row\r\n  renderDayGridBgIntroHtml = () => {\r\n    let { theme } = this\r\n\r\n    if (this.colWeekNumbersVisible) {\r\n      return '<td class=\"fc-week-number ' + theme.getClass('widgetContent') + '\" ' + this.weekNumberStyleAttr() + '></td>'\r\n    }\r\n\r\n    return ''\r\n  }\r\n\r\n\r\n  // Generates the HTML that goes before every other type of row generated by DayGrid.\r\n  // Affects mirror-skeleton and highlight-skeleton rows.\r\n  renderDayGridIntroHtml = () => {\r\n\r\n    if (this.colWeekNumbersVisible) {\r\n      return '<td class=\"fc-week-number\" ' + this.weekNumberStyleAttr() + '></td>'\r\n    }\r\n\r\n    return ''\r\n  }\r\n\r\n}\r\n\r\nDayGridView.prototype.dateProfileGeneratorClass = DayGridDateProfileGenerator\r\n","import {\r\n  DateProfile,\r\n  EventStore,\r\n  EventUiHash,\r\n  DateSpan,\r\n  EventInteractionState,\r\n  // DayTable, //hiedra\r\n  Duration,\r\n  DateComponent,\r\n  DateRange,\r\n  Slicer,\r\n  Hit,\r\n  ComponentContext\r\n} from '@fullcalendar/core'\r\nimport { default as DayGrid, DayGridSeg } from './DayGrid'\r\nimport { default as DayTable } from './DayTable' // hiedra\r\n\r\nexport interface SimpleDayGridProps {\r\n  dateProfile: DateProfile | null\r\n  dayTable: DayTable\r\n  nextDayThreshold: Duration\r\n  businessHours: EventStore\r\n  eventStore: EventStore\r\n  eventUiBases: EventUiHash\r\n  dateSelection: DateSpan | null\r\n  eventSelection: string\r\n  eventDrag: EventInteractionState | null\r\n  eventResize: EventInteractionState | null\r\n  isRigid: boolean\r\n}\r\n\r\nexport default class SimpleDayGrid extends DateComponent<SimpleDayGridProps> {\r\n\r\n  dayGrid: DayGrid\r\n\r\n  private slicer = new DayGridSlicer()\r\n\r\n  constructor(context: ComponentContext, dayGrid: DayGrid) {\r\n    super(context, dayGrid.el)\r\n\r\n    this.dayGrid = dayGrid\r\n\r\n    context.calendar.registerInteractiveComponent(this, { el: this.dayGrid.el })\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy()\r\n\r\n    this.calendar.unregisterInteractiveComponent(this)\r\n  }\r\n\r\n  render(props: SimpleDayGridProps) {\r\n    let { dayGrid } = this\r\n    let { dateProfile, dayTable } = props\r\n\r\n    dayGrid.receiveProps({\r\n      ...this.slicer.sliceProps(props, dateProfile, props.nextDayThreshold, dayGrid, dayTable),\r\n      dateProfile,\r\n      cells: dayTable.cells,\r\n      isRigid: props.isRigid\r\n    })\r\n  }\r\n\r\n  buildPositionCaches() {\r\n    this.dayGrid.buildPositionCaches()\r\n  }\r\n\r\n  queryHit(positionLeft: number, positionTop: number): Hit {\r\n    let rawHit = this.dayGrid.positionToHit(positionLeft, positionTop)\r\n\r\n    if (rawHit) {\r\n      return {\r\n        component: this.dayGrid,\r\n        dateSpan: rawHit.dateSpan,\r\n        dayEl: rawHit.dayEl,\r\n        rect: {\r\n          left: rawHit.relativeRect.left, // + (positionLeft - this.dayGrid.colPositions.lefts[0]),\r\n          right: rawHit.relativeRect.right, // + (positionLeft - this.dayGrid.colPositions.lefts[0]),\r\n          top: rawHit.relativeRect.top,\r\n          bottom: rawHit.relativeRect.bottom\r\n        },\r\n        layer: 0\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport class DayGridSlicer extends Slicer<DayGridSeg, [DayTable]> {\r\n\r\n  sliceRange(dateRange: DateRange, dayTable: DayTable): DayGridSeg[] {\r\n    return dayTable.sliceRange(dateRange)\r\n  }\r\n\r\n}\r\n","import { Seg, DaySeries, DateRange, DateMarker } from '@fullcalendar/core'\r\n\r\nexport interface DayTableSeg extends Seg {\r\n  row: number\r\n  firstCol: number\r\n  lastCol: number\r\n}\r\n\r\nexport interface DayTableCell {\r\n  date: DateMarker\r\n  htmlAttrs?: string\r\n}\r\n\r\nexport default class DayTable {\r\n\r\n  rowCnt: number\r\n  colCnt: number\r\n  cells: DayTableCell[][]\r\n  headerDates: DateMarker[]\r\n\r\n  private invalidIndex: { idxini: number; idxfin: number }[]\r\n  private daySeries: DaySeries\r\n\r\n  constructor(daySeries: DaySeries, breakOnWeeks: boolean) {\r\n    this.rowCnt = 12\r\n    this.colCnt = 31\r\n    this.daySeries = daySeries\r\n    this.cells = this.buildCells()\r\n    this.headerDates = this.buildHeaderDates()\r\n  }\r\n\r\n  private buildCells() {\r\n    let rows = []\r\n    let cells = []\r\n    let inrows = []\r\n\r\n    let inrow: { idxini: number; idxfin: number }\r\n    let tinvalid: number = 0\r\n    for (let i = 0; i < this.daySeries.dates.length; i++) {\r\n      cells.push(\r\n        { date: this.daySeries.dates[i] }\r\n      )\r\n      if (this.daySeries.dates.length === (i + 1) || this.daySeries.dates[i + 1].getDate() === 1) {\r\n\r\n        inrow = { idxini: -1, idxfin: -1 }\r\n\r\n        for (let padding = this.daySeries.dates[i].getDate(); padding < 31; padding++) {\r\n          cells.push({\r\n            date: null\r\n          })\r\n          if (inrow.idxini === -1) {\r\n            inrow.idxini = tinvalid + i + 1\r\n            inrow.idxfin = tinvalid + i + 1\r\n          } else {\r\n            inrow.idxfin = inrow.idxfin + 1\r\n          }\r\n          tinvalid++\r\n        }\r\n        if (inrow.idxini !== -1) {\r\n          inrows.push(inrow)\r\n        }\r\n        rows.push(cells)\r\n        cells = []\r\n      }\r\n    }\r\n    this.invalidIndex = inrows\r\n    return rows\r\n  }\r\n\r\n  private buildHeaderDates() {\r\n    let dates = []\r\n\r\n    for (let col = 0; col < this.colCnt; col++) {\r\n      dates.push(this.cells[0][col].date)\r\n    }\r\n\r\n    return dates\r\n  }\r\n\r\n  sliceRange(range: DateRange): DayTableSeg[] {\r\n\r\n    let { colCnt } = this\r\n    let seriesSeg = this.daySeries.sliceRange(range)\r\n    let segs: DayTableSeg[] = []\r\n\r\n    if (seriesSeg) {\r\n\r\n      let { firstIndex, lastIndex } = seriesSeg\r\n      // Hiedra: skip invalid dates\r\n      for (let cellinvalid of this.invalidIndex) {\r\n        \r\n        let value:number = cellinvalid.idxfin - cellinvalid.idxini + 1\r\n        if (cellinvalid.idxini!=-1) {\r\n\r\n            if (firstIndex >= cellinvalid.idxini) {\r\n                firstIndex += value\r\n                lastIndex += value\r\n\r\n            } else if (lastIndex >= cellinvalid.idxini) {\r\n                lastIndex += value\r\n            } else\r\n                break;\r\n        }\r\n      }\r\n\r\n      let index = firstIndex\r\n\r\n      while (index <= lastIndex) {\r\n        let row = Math.floor(index / colCnt)\r\n        let nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1)\r\n        // invalid date?\r\n        segs.push({\r\n          row: row,\r\n          firstCol: index % colCnt,\r\n          lastCol: (nextIndex - 1) % colCnt,\r\n          isStart: seriesSeg.isStart && index === firstIndex,\r\n          isEnd: seriesSeg.isEnd && (nextIndex - 1) === lastIndex\r\n        })\r\n\r\n        index = nextIndex\r\n      }\r\n\r\n    }\r\n\r\n    return segs\r\n  }\r\n\r\n}\r\n\r\n","import {\r\n  DayHeader,\r\n  ComponentContext,\r\n  ViewSpec,\r\n  DateProfileGenerator,\r\n  DateProfile,\r\n  ViewProps,\r\n  memoize,\r\n  DaySeries\r\n} from '@fullcalendar/core'\r\nimport AbstractDayGridView from './AbstractDayGridView'\r\nimport SimpleDayGrid from './SimpleDayGrid'\r\nimport DayTable from './DayTable'\r\nimport { locale as momentsetlocale } from 'moment' // Hiedra\r\n\r\nexport default class DayGridView extends AbstractDayGridView {\r\n\r\n  header: DayHeader\r\n  simpleDayGrid: SimpleDayGrid\r\n  dayTable: DayTable\r\n\r\n  private buildDayTable = memoize(buildDayTable)\r\n\r\n  constructor(_context: ComponentContext, viewSpec: ViewSpec, dateProfileGenerator: DateProfileGenerator, parentEl: HTMLElement) {\r\n    super(_context, viewSpec, dateProfileGenerator, parentEl)\r\n    // set moment locale\r\n    momentsetlocale(this.context.dateEnv.locale.codeArg.toString()) // Hiedra\r\n\r\n    if (this.opt('columnHeader')) {\r\n      this.header = new DayHeader(\r\n        this.context,\r\n        this.el.querySelector('.fc-head-container')\r\n      )\r\n    }\r\n\r\n    this.simpleDayGrid = new SimpleDayGrid(this.context, this.dayGrid)\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy()\r\n\r\n    if (this.header) {\r\n      this.header.destroy()\r\n    }\r\n\r\n    this.simpleDayGrid.destroy()\r\n  }\r\n\r\n  render(props: ViewProps) {\r\n    super.render(props)\r\n\r\n    let { dateProfile } = this.props\r\n\r\n    let dayTable = this.dayTable =\r\n      this.buildDayTable(dateProfile, this.dateProfileGenerator)\r\n\r\n    if (this.header) {\r\n      this.header.receiveProps({\r\n        dateProfile,\r\n        dates: dayTable.headerDates,\r\n        datesRepDistinctDays: dayTable.rowCnt === 1,\r\n        renderIntroHtml: this.renderHeadIntroHtml\r\n      })\r\n    }\r\n    \r\n    this.simpleDayGrid.receiveProps({\r\n      dateProfile,\r\n      dayTable,\r\n      businessHours: props.businessHours,\r\n      dateSelection: props.dateSelection,\r\n      eventStore: props.eventStore,\r\n      eventUiBases: props.eventUiBases,\r\n      eventSelection: props.eventSelection,\r\n      eventDrag: props.eventDrag,\r\n      eventResize: props.eventResize,\r\n      isRigid: this.hasRigidRows(),\r\n      nextDayThreshold: this.nextDayThreshold\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport function buildDayTable(dateProfile: DateProfile, dateProfileGenerator: DateProfileGenerator) {\r\n  let daySeries = new DaySeries(dateProfile.renderRange, dateProfileGenerator)\r\n\r\n  return new DayTable(\r\n    daySeries,\r\n    /year|month|week/.test(dateProfile.currentRangeUnit)\r\n  )\r\n}\r\n","// import './main.scss'\r\n\r\nimport { createPlugin } from '@fullcalendar/core'\r\nimport DayGridView from './DayGridView'\r\n\r\nexport { default as SimpleDayGrid, DayGridSlicer } from './SimpleDayGrid'\r\nexport { default as DayGrid, DayGridSeg } from './DayGrid'\r\nexport { default as AbstractDayGridView } from './AbstractDayGridView'\r\nexport { default as DayGridView, buildDayTable as buildBasicDayTable } from './DayGridView'\r\nexport { default as DayBgRow } from './DayBgRow'\r\nexport { default as DayTable, DayTableSeg, DayTableCell } from './DayTable'\r\n\r\nexport default createPlugin({\r\n  defaultView: 'year',\r\n  views: {\r\n\r\n    yearGrid: DayGridView,\r\n\r\n    year: {\r\n      type: 'yearGrid',\r\n      duration: { years: 1 }\r\n    }\r\n  }\r\n})\r\n"],"names":["tslib_1.__extends","DateProfileGenerator","createElement","listenBySelector","removeElement","computeRect","computeClippingRect","applyStyle","cssToStr","htmlEscape","FgEventRenderer","appendToElement","prependToElement","htmlToElement","moment","FillRenderer","memoizeRendering","createFormatter","addDays","DateComponent","rangeContainsMarker","getDayClasses","findElements","PositionCache","buildGotoAnchorHtml","findChildren","insertAfterElement","intersectRanges","WEEK_NUM_FORMAT","ScrollComponent","matchCellWidths","uncompensateScroll","compensateScroll","subtractInnerElHeight","distributeHeight","undistributeHeight","View","Slicer","memoize","momentsetlocale","DayHeader","AbstractDayGridView","DaySeries","createPlugin","DayGridView"],"mappings":"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"}