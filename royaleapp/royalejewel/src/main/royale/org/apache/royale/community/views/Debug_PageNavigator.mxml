<?xml version="1.0" encoding="utf-8"?>
<j:Grid gap="true" xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:j="library://ns.apache.org/royale/jewel"
    xmlns:js="library://ns.apache.org/royale/basic"    
    xmlns:jc="library://ns.apache.org/royale/community"
    xmlns:html="library://ns.apache.org/royale/html" 
    initComplete="onInitComplete()" >

    <fx:Script>
        <![CDATA[
        import org.apache.royale.collections.ArrayList;
        import org.apache.royale.collections.ArrayListView;
        import org.apache.royale.icons.FontAwesomeIcon;
        import org.apache.royale.community.vo.PageNavigatorButtonBarVO;

        public function onInitComplete():void
        {
            makeDP(true);            
        }

        [Bindable]
        private var dp_Asource:ArrayList = new ArrayList;
        private var dp_AsourceAll:ArrayListView = new ArrayListView;
        [Bindable]
        private var pageSize:int = 14;        
        [Bindable]
        private var maxPageNav:int = 3;
        [Bindable]
        private var currentPage:int = 0;
        [Bindable]
        private var totalRegs:int = 0;
        [Bindable]
        private var totalPages:int = 0;
        [Bindable]
        private var startIndexPage:int = -1;
        [Bindable]
        private var endIndexPage:int = -1;
        [Bindable]
        private var dpNumPages:ArrayList = new ArrayList([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,25,30,35,40,45,50,100]);

        private function makeDP(init:Boolean = false,proposedPage:int = -1):void
        {
            if(init)
            {
                var prefix:String="";
                var ar2:Array = new Array();
                for(var index:int = 0; index < 100; index++)
                {
                    ar2.push({codigo:index,displaytext:prefix+'Desc: '+index.toString()});
                } 
                dp_AsourceAll = new ArrayListView(new ArrayList(ar2));
            }

            var asourceSearch:ArrayListView = new ArrayListView(new ArrayList(dp_AsourceAll.toArray()));

            totalRegs = asourceSearch.length;
            totalPages = Math.ceil(totalRegs/pageSize);

            var indexToPos:int = 0;

            if(proposedPage < 1)
                proposedPage = 1;

            if(proposedPage > totalPages)
                proposedPage = totalPages;

            if(proposedPage != currentPage)
                currentPage = proposedPage;

            var loc_pagesize:int = pageSize;
            if(loc_pagesize > totalRegs)
                loc_pagesize = totalRegs;
            startIndexPage = (currentPage - 1) * loc_pagesize;
            endIndexPage = Math.min(startIndexPage + loc_pagesize - 1, totalRegs - 1);

            //Op1: We filter AsourceAll
            var ireg:int = -1;
            var isInSearch:Boolean = true;
            var exitFor:Boolean = false;
            trace("loc_startIndexPage Init:",startIndexPage.toString(), "loc_endIndexPage Init:",endIndexPage.toString());
            asourceSearch.filterFunction = function(item:Object):Boolean
            {
                if(exitFor)
                    return false;

                ireg +=1;
                if(ireg >= startIndexPage && ireg <= endIndexPage){
                    return true;
                }else{
                    exitFor = (ireg > endIndexPage);
                    return false;
                }
            }

            asourceSearch.refresh();
            dp_Asource = new ArrayList(asourceSearch.toArray());
        }

        private function onPageSizeChanged():void
        {
            pageSize = int(cbPageSize.selectedItem);
            currentPage = -1;
            makeDP(false,1);
        }

        private function onNavpageChange(event:Event):void
        {
            var proposedPage:int = (event.target.selectedItem as PageNavigatorButtonBarVO).valuePage;
            
            makeDP(false,proposedPage);
        }

        private function onChangeDisabled():void
        {
            bdisablepaginator.disabled = !tb_Test1.selected;
        }


        ]]>
    </fx:Script>

    <j:beads>
        <js:ContainerDataBinding/>
		<js:Paddings paddingTop="0" paddingLeft="45" paddingRight="45" paddingBottom="45"/>
        <j:ScrollingViewport/>
    </j:beads>

    <jc:ExampleHeader title="Custom Component">
        <jc:description>
            <![CDATA[Tests <strong>PageNavigatorButtonBar</strong> Basic Page Navigator]]>
        </jc:description>
    </jc:ExampleHeader>

    <j:GridCell desktopNumerator="1" desktopDenominator="1" tabletNumerator="1" tabletDenominator="1" phoneNumerator="1" phoneDenominator="1">

        <j:Card>

            <j:CardHeader>
                <j:CardTitle text="Page Navigator - Debugger" className="primary-normal"/>
            </j:CardHeader>

            <j:CardPrimaryContent>
                <j:Grid gap="true">
                
                    <j:GridCell desktopNumerator="1" desktopDenominator="4" tabletNumerator="1" tabletDenominator="4" phoneNumerator="1" phoneDenominator="1">
                        <j:HGroup localId="sectionNavPages" gap="3" percentWidth="100" itemsVerticalAlign="itemsCenter" >
                            <j:Label text="Rec. page: "/>                                            
                            <jc:ComboBoxJwExt localId="cbPageSize" dataProvider="{dpNumPages}" selectedItem = "{pageSize}" change="onPageSizeChanged()"/>
                        </j:HGroup>
                    </j:GridCell>
                    
                    <j:GridCell desktopNumerator="1" desktopDenominator="4" tabletNumerator="2" tabletDenominator="4" phoneNumerator="2" phoneDenominator="3">
                        <jc:PageNavigatorButtonBar localId="paginator" emphasis="secondary" maxWidth="320"
                                                    iconField="icon"
                                                    maxNavButtons="{maxPageNav}"
                                                    pageSize="{pageSize}"
                                                    totalItems="{totalRegs}"
                                                    change="onNavpageChange(event)"
                                                    currentPage="{currentPage}">
                            <jc:beads>
                                <j:ListPresentationModel rowHeight="35" variableRowHeight="false" />
                                <j:Disabled localId="bdisablepaginator" disabled="false"/>
                            </jc:beads>
                        </jc:PageNavigatorButtonBar>
                    </j:GridCell>
                            
                    <j:GridCell desktopNumerator="1" desktopDenominator="8" tabletNumerator="1" tabletDenominator="4" phoneNumerator="1" phoneDenominator="3">
                        <j:ToggleButton localId="tb_Test1" unboxed="true"
                            text="OFF" selectedText="ON" change="onChangeDisabled()" selected="true">
                            <j:icon>
                                <js:FontAwesomeToggleIcon text="{FontAwesome5IconType.TOGGLE_OFF}" faStyle="{FontAwesomeIcon.DUOTONE}" selectedText="{FontAwesome5IconType.TOGGLE_ON}"
                                faSelectedStyle="{FontAwesomeIcon.DUOTONE}" relativeSize="{FontAwesomeIcon.SIZE_X2}"/>
                            </j:icon>
                            <j:beads>
                                <j:ToolTip localId="tb_filter_tt" toolTip="{tb_Test1.selected ? 'Disable PageNavigator' :'Activate PageNavigator'}"/>
                            </j:beads>
                        </j:ToggleButton>
                    </j:GridCell>
                            
                    <j:GridCell desktopNumerator="1" desktopDenominator="1" tabletNumerator="1" tabletDenominator="1" phoneNumerator="1" phoneDenominator="1">

                        <jc:ListJwExt localId="exampleNumListCustom" percentHeight="100" width="100%" minHeight="200" 
                        dataProvider="{dp_Asource}" labelField="displaytext" 
                        itemRenderer="org.apache.royale.community.itemRenderers.LabelTruncateItemRenderer">
                            <jc:beads>
                                <j:ListAlternateRowColor />
                                <j:ListPresentationModel localId="exampleNumListPresModel2" variableRowHeight="false" rowHeight="35"/>
                                <js:EasyDataProviderChangeNotifier />
                            </jc:beads>
                        </jc:ListJwExt>

                    </j:GridCell>
                </j:Grid>

            </j:CardPrimaryContent>

        </j:Card>
    </j:GridCell>
</j:Grid>
