<?xml version="1.0" encoding="utf-8"?>
<j:Grid gap="true" xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:j="library://ns.apache.org/royale/jewel"
    xmlns:js="library://ns.apache.org/royale/basic"    
    xmlns:jc="library://ns.apache.org/royale/community"
    xmlns:sp="library://ns.apache.org/royale/externsjs/splide"
    xmlns:html="library://ns.apache.org/royale/html" 
    xmlns:views="org.apache.royale.community.views.aggrid.*"
    initComplete="onInitComplete()"
    > 
    
    <fx:Script>
        <![CDATA[
        import org.apache.royale.events.Event;
        import agGrid;
       
        public function onInitComplete():void
        {

COMPILE::JS{
   var obj:agGrid;
        var gridOptions = {
            columnDefs: [
                { headerName: "Make", field: "make" },
                { headerName: "Owner", field: "owner" },
                { headerName: "Model", field: "model" },
                { headerName: "Price", field: "price" }
            ],
            rowData: [
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 },
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 },
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 },
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 },
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 },
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 },
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 },
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 },
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 },
                {owner:"Alina Kazi", make: "Toyota", model: "Camry", price: 25000 },
                {owner:"Irhaa", make: "Honda", model: "Accord", price: 30000 },
                {owner:"Arham", make: "Toyota", model: "Revo", price: 2500000 },
                {owner:"Pashmina", make: "Ford", model: "Mustang", price: 45000 }
            
            ],
            defaultColDef: {sortable: true, filter: true},
        
            rowSelection: 'multiple', // allow rows to be selected
            animateRows: true,
            pagination:true
        };
      agGrid.Grid(myGrid.element, gridOptions);

             
 }    
 
      }   
    public function download():void
    {
            ((agGrid as Object).gridOptions as Object).api.exportDataAsCsv();

    } 
]]>
    </fx:Script>

    <j:beads>
        <js:ViewDataBinding/>
        <j:ScrollingViewport/>
    </j:beads>

    <jc:ExampleHeader title="JS AGGrid - Royale Wrapper">
        <jc:description>
            <![CDATA[Tests <strong>Configuration Options</strong> [WIP] (<a href="" target="_blank">)]]>
        </jc:description>
    </jc:ExampleHeader>

    <j:GridCell desktopNumerator="1" desktopDenominator="1" tabletNumerator="1" tabletDenominator="1" phoneNumerator="1" phoneDenominator="1"
     >	
     <j:Button click="download();" text="Export to CSV" />
    <html:Div localId="myGrid"  className="ag-theme-alpine" style="height:600px;" />
    </j:GridCell>

</j:Grid>