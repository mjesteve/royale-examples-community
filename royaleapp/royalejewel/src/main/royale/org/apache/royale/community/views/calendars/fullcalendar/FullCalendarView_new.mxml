<?xml version="1.0" encoding="utf-8"?>
<j:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:j="library://ns.apache.org/royale/jewel"
    xmlns:js="library://ns.apache.org/royale/basic"    
    xmlns:jc="library://ns.apache.org/royale/community"
    xmlns:html="library://ns.apache.org/royale/html" 
    initComplete="onInit()"
    gap="5" percentHeight="100" percentWidth="100" >

    <fx:Script>
        <![CDATA[
			import FullCalendar.Calendar;

			private var mycalendar:Calendar;
			private function onInit():void
			{
				mycalendar = new FullCalendar.Calendar(myContainerCalendar.element, {
                    timeZone: 'local',
                    initialView: 'dayGridMonth',
                    showNonCurrentDates: false,
                    locales: ['en','es'],
                    locale: 'en',
                    editable: true,
                    selectable: true,
                    height: '100%',
                    //width: '50%', <-- Always set the width to 100% of the parent container
                    expandRows: false,
                    windowResize: function(arg:Object):void {
                        //alert('The calendar has adjusted to a window resize. Current view: ' + arg.view.type);
                    }}
                );
				mycalendar.render();
			}

            public function refreshSizeCalendar():void
            {
                //Since the view is not visible when it is loaded, the calendar control is NOT REDIMENSED 
                //and must be refreshed when it is made visible.
                mycalendar.updateSize();
            }

            private function clickBtResize():void
            {
                trace(primaryContent.width,primaryContent.height);
                trace(parentContentCalendar.width,parentContentCalendar.height);
                //To change the width of the calendar we have to change the width of the parent container...
                parentContentCalendar.width = parentContentCalendar.width/2;
                
                //...However, the height can be set directly on the calendar container.
                //When we set the width, the Calendar content is resized but the same does not happen with 
                //the Height which does not quite fit the new height of the container and shows a scroll.
                // AspectRatio:
                var asr:Number = Number(mycalendar.getOption('aspectRatio'));
                //mycalendar.setOption('height', parentContentCalendar.width/asr);

                //The aspectRatio does not match the actual ratio between width and height (must be by specifically setting 100%).
                parentContentCalendar.height = parentContentCalendar.width/asr;
                
                mycalendar.updateSize();
            }
            private function clickBtRestoreSize():void
            {
                //We adopted the strategy of resizing the container instead of the calendar.
                parentContentCalendar.width = primaryContent.width-40; //40px padding
                parentContentCalendar.height = primaryContent.height-40; //40px padding
                //Theoretically, by setting the width and height back to 100% it should resize correctly but it does not. 
                //We must set the exact width and height, and in addition if we want to keep the Responsive behavior 
                //we must also set the percentWidth and percentHeight.
                parentContentCalendar.percentWidth = 100;                
                parentContentCalendar.percentHeight = 100;
                mycalendar.setOption('height', '100%');
                mycalendar.updateSize();
            }
        ]]>
    </fx:Script>

    <j:beads>
        <js:ContainerDataBinding/>
		<js:Paddings paddingTop="5" paddingLeft="50" paddingRight="50" paddingBottom="50"/>
    </j:beads>

    <jc:HExampleHeader title="JS FullCalendar - Royale Wrapper">
        <jc:description>
            <![CDATA[Tests <strong>JS FullCalendar</strong> (<a href="https://fullcalendar.io/" target="_blank">https://fullcalendar.io/</a>)]]>
        </jc:description>
    </jc:HExampleHeader>

    <j:Card percentHeight="100" percentWidth="100">

        <j:CardHeader height="100">
            <j:VGroup gap="5" percentWidth="100">
                <j:CardTitle text="Simple wrapper " className="primary-normal" percentWidth="100"/>            
                <html:H5 text="[WIP]"  className="primary-dark" style="margin-bottom:15px;"/>
            </j:VGroup>
        </j:CardHeader>

        <j:CardExpandedContent itemsHorizontalAlign="itemsCenter" itemsVerticalAlign="itemsCenter">            
            <j:HGroup itemsHorizontalAlign="itemsCenter" itemsVerticalAlign="itemsCentered" gap="3"
                style="margin:20px 20px 0px 20px;" percentWidth="100" height="60" >
                <j:Button localId="btResize" text="Resize 50%" click="clickBtResize()"/>
                <j:Button localId="btRestoreSize" text="Restore Size 100%" click="clickBtRestoreSize()"/>               
            </j:HGroup>
        </j:CardExpandedContent>

        <j:CardPrimaryContent localId="primaryContent" percentHeight="100" percentWidth="100">  
            <j:Group localId="parentContentCalendar" percentHeight="100" percentWidth="100">
                <html:Div id="myContainerCalendar" percentWidth="100"/>
            </j:Group>     
        </j:CardPrimaryContent>

    </j:Card>

</j:VGroup>
